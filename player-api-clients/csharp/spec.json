{
  "openapi": "3.0.0",
  "paths": {
    "/v1/health/services": {
      "get": {
        "operationId": "check",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The Health Check is successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ok"
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": {},
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "The Health Check is not successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": {
                        "redis": {
                          "status": "down",
                          "message": "Could not connect"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        },
                        "redis": {
                          "status": "down",
                          "message": "Could not connect"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Health"
        ]
      }
    },
    "/v1/player/assets/users/{entityId}": {
      "post": {
        "operationId": "getUserAssetsForGamePost",
        "parameters": [
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlayerGetAssetsForUserBodyInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerGetAssetsForUserResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Get all the assets of a profile (NFT assets, e.g. ERC721 / ERC1155)",
        "tags": [
          "Assets"
        ]
      }
    },
    "/v1/player/assets/users/{entityId}/currencies": {
      "get": {
        "operationId": "getUserCurrencies",
        "parameters": [
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "chainId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerGetUserCurrenciesResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Get all the currencies owned by an account (ERC20)",
        "tags": [
          "Assets"
        ]
      }
    },
    "/v1/player/assets/users/{entityId}/native": {
      "get": {
        "operationId": "getUserNativeCurrency",
        "parameters": [
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "chainId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerGetUserNativeCurrencyResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Get the native token balance",
        "tags": [
          "Assets"
        ]
      }
    },
    "/v1/player/assets/users/{entityId}/transfer-asset": {
      "post": {
        "operationId": "TransferAsset",
        "parameters": [
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlayerTransferAssetRequestInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerPlayerOperationResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Transfer an asset (NFT assets, ERC721 / ERC1155)",
        "tags": [
          "Assets"
        ]
      }
    },
    "/v1/player/assets/users/{entityId}/transfer-token": {
      "post": {
        "operationId": "TransferToken",
        "parameters": [
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlayerTransferTokenRequestInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerPlayerOperationResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Transfer a token (token assets, ERC20)",
        "tags": [
          "Assets"
        ]
      }
    },
    "/v1/player/assets/users/{entityId}/transfer-native": {
      "post": {
        "operationId": "TransferNativeToken",
        "parameters": [
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlayerTransferNativeTokenRequestInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerPlayerOperationResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Transfer the native token",
        "tags": [
          "Assets"
        ]
      }
    },
    "/v1/player/assets/{assetAddress}/assets": {
      "post": {
        "operationId": "getAssetsForContract",
        "parameters": [
          {
            "name": "assetAddress",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlayerGetAssetsForContractBodyInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerGetAssetsForContractResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Get all the assets of contract (NFT assets, e.g. ERC721 / ERC1155)",
        "tags": [
          "Assets"
        ]
      }
    },
    "/v1/player/assets/{assetAddress}/assets/{assetId}": {
      "get": {
        "operationId": "getAsset",
        "parameters": [
          {
            "name": "chainId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "name": "assetAddress",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "assetId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entityId",
            "required": false,
            "in": "query",
            "description": "If true, will always return 'owners' record for this User if he owns the asset",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "owners",
            "required": false,
            "in": "query",
            "description": "If true, will return all owners of the asset",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerGetAssetResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Get a single NFT (e.g. ERC721 / ERC1155)",
        "tags": [
          "Assets"
        ]
      }
    },
    "/v1/player/assets/{assetAddress}/attributes": {
      "get": {
        "operationId": "getAttributes",
        "parameters": [
          {
            "name": "assetAddress",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "chainId",
            "required": true,
            "in": "query",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerGetAttributesResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "",
        "tags": [
          "Assets"
        ]
      }
    },
    "/v1/player/assets/{assetAddress}/owners": {
      "get": {
        "operationId": "getOwners",
        "parameters": [
          {
            "name": "assetAddress",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "chainId",
            "required": true,
            "in": "query",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": "10",
              "type": "number"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "schema": {
              "default": "0",
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerGetOwnersResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "",
        "tags": [
          "Assets"
        ]
      }
    },
    "/v1/player/assets/{assetAddress}/owners/{ownerAddress}/assets": {
      "post": {
        "operationId": "getOwnerAssets",
        "parameters": [
          {
            "name": "assetAddress",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ownerAddress",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlayerGetOwnerAssetsBodyInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerGetOwnerAssetsResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "",
        "tags": [
          "Assets"
        ]
      }
    },
    "/v1/player/marketplace": {
      "post": {
        "operationId": "getListedAssets",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlayerGetListedAssetsBodyInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerGetAssetListingsResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Get all listed assets for a game (NFT assets, e.g. ERC721 / ERC1155)",
        "tags": [
          "Marketplace"
        ]
      }
    },
    "/v1/player/marketplace/users/{entityId}": {
      "post": {
        "operationId": "getListedAssetsForUser",
        "parameters": [
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlayerGetListedAssetsBodyInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerGetAssetListingsResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Get all the assets listed by a profile (NFT assets, e.g. ERC721 / ERC1155)",
        "tags": [
          "Marketplace"
        ]
      }
    },
    "/v1/player/marketplace/users/{entityId}/listing": {
      "post": {
        "operationId": "listAsset",
        "parameters": [
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlayerSellAssetRequestInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerPlayerOperationResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "List an asset for sale",
        "tags": [
          "Marketplace"
        ]
      }
    },
    "/v1/player/marketplace/users/{entityId}/listing/{orderId}": {
      "post": {
        "operationId": "buyListedAsset",
        "parameters": [
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlayerBuyAssetRequestInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerPlayerOperationResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Buy listed asset",
        "tags": [
          "Marketplace"
        ]
      },
      "delete": {
        "operationId": "cancelListing",
        "parameters": [
          {
            "name": "chainId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlayerCancelAssetListingRequestInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerPlayerOperationResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Cancel asset listing",
        "tags": [
          "Marketplace"
        ]
      }
    },
    "/v1/player/marketplace/users/{entityId}/offers": {
      "post": {
        "operationId": "createAssetOffer",
        "parameters": [
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlayerCreateAssetOfferRequestInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerPlayerOperationResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Make an offer for an asset",
        "tags": [
          "Marketplace"
        ]
      },
      "get": {
        "operationId": "getUserOffers",
        "parameters": [
          {
            "name": "chainId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "continuation",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerGetAssetListingsResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Get all offers that a user created",
        "tags": [
          "Marketplace"
        ]
      }
    },
    "/v1/player/marketplace/users/{entityId}/offers/asset/{assetAddress}/{assetId}": {
      "get": {
        "operationId": "getUserAssetOffers",
        "parameters": [
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "assetAddress",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "assetId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "chainId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "name": "continuation",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerGetAssetListingsResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Get all asset offers that a user created for a specific asset",
        "tags": [
          "Marketplace"
        ]
      }
    },
    "/v1/player/marketplace/users/{entityId}/offers/{offerId}/accept": {
      "post": {
        "operationId": "acceptAssetOffer",
        "parameters": [
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offerId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlayerAcceptAssetOfferRequestInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerPlayerOperationResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Accept an offer for an asset",
        "tags": [
          "Marketplace"
        ]
      }
    },
    "/v1/player/marketplace/users/{entityId}/offers/{offerId}": {
      "delete": {
        "operationId": "cancelAssetOffer",
        "parameters": [
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offerId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlayerCancelAssetOfferRequestInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerPlayerOperationResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Cancel an offer for an asset",
        "tags": [
          "Marketplace"
        ]
      }
    },
    "/v1/player/marketplace/offers/asset/{assetAddress}/{assetId}": {
      "get": {
        "operationId": "getAssetOffers",
        "parameters": [
          {
            "name": "assetAddress",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "assetId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "chainId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "name": "continuation",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerGetAssetListingsResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Get all offers for an asset",
        "tags": [
          "Marketplace"
        ]
      }
    },
    "/v1/player/marketplace/chain-currencies/{chainId}": {
      "get": {
        "operationId": "getChainCurrencies",
        "parameters": [
          {
            "name": "chainId",
            "required": true,
            "in": "path",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerGetChainCurrenciesResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Get available currencies for given chain",
        "tags": [
          "Marketplace"
        ]
      }
    },
    "/v1/player/marketplace/refresh/token": {
      "post": {
        "operationId": "refreshToken",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlayerRefreshTokenRequestBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Schedule a token refresh in the indexer",
        "tags": [
          "Marketplace"
        ]
      }
    },
    "/v1/player/marketplace/refresh/contract": {
      "post": {
        "operationId": "refreshContract",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlayerRefreshContractRequestBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Schedule a contract refresh in the indexer",
        "tags": [
          "Marketplace"
        ]
      }
    },
    "/v1/player/transactions": {
      "get": {
        "operationId": "getTransactions",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": "10",
              "type": "number"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "schema": {
              "default": "0",
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerGetTransactionsResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Get a paginated list of transactions from your game",
        "tags": [
          "Transactions"
        ]
      }
    },
    "/v1/player/transactions/{transactionId}": {
      "get": {
        "operationId": "getTransaction",
        "parameters": [
          {
            "name": "transactionId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerGetTransactionResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Getting a transaction",
        "tags": [
          "Transactions"
        ]
      }
    },
    "/v1/player/transactions/users/{entityId}": {
      "get": {
        "operationId": "getUserTransactions",
        "parameters": [
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": "10",
              "type": "number"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "schema": {
              "default": "0",
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerGetTransactionsResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Get a paginated list of transactions created on behalf of a user",
        "tags": [
          "Transactions"
        ]
      },
      "post": {
        "operationId": "createUserTransaction",
        "parameters": [
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlayerCreateTransactionRequestInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerPlayerOperationResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Creating a new transaction on behalf of a user",
        "tags": [
          "Transactions"
        ]
      }
    },
    "/v1/player/users": {
      "get": {
        "operationId": "getAllUsers",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": "10",
              "type": "number"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "schema": {
              "default": "0",
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerGetAllUsersResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Returns a list of users",
        "tags": [
          "Users"
        ]
      }
    },
    "/v1/player/users/{entityId}": {
      "get": {
        "operationId": "getUser",
        "parameters": [
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerGetUserResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Returns a particular user",
        "tags": [
          "Users"
        ]
      },
      "patch": {
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlayerUpdateUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerGetUserResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Updates entityId for the user",
        "tags": [
          "Users"
        ]
      },
      "delete": {
        "operationId": "unlinkUser",
        "parameters": [
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerGetUserResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Unlinks an entity ID from a user",
        "tags": [
          "Users"
        ]
      }
    },
    "/v1/player/operation/{opId}": {
      "get": {
        "operationId": "getOperation",
        "parameters": [
          {
            "name": "opId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerPlayerOperationResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Returns operation data for given id. Used by Game SDKs to get transaction results.",
        "tags": [
          "Operation"
        ]
      },
      "patch": {
        "operationId": "processOperation",
        "parameters": [
          {
            "name": "opId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlayerConfirmOperationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerPlayerOperationResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Updates operation result for given id",
        "tags": [
          "Operation"
        ]
      },
      "delete": {
        "operationId": "deleteOperation",
        "parameters": [
          {
            "name": "opId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerPlayerOperationResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Delete an operation",
        "tags": [
          "Operation"
        ]
      }
    },
    "/v1/player/operation/{opId}/execute": {
      "post": {
        "operationId": "executeSignedOperation",
        "parameters": [
          {
            "name": "opId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerPlayerOperationResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Executes operation for given id",
        "tags": [
          "Operation"
        ]
      }
    },
    "/v1/player/exchange/quote/input": {
      "get": {
        "operationId": "getQuoteForInput",
        "parameters": [
          {
            "name": "tokenIn",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tokenOut",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "amountOut",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "chainId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerGetQuoteResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Returns the maximum necessary input amount for a token trade, given a desired output amount",
        "tags": [
          "Exchange"
        ]
      }
    },
    "/v1/player/exchange/quote/output": {
      "get": {
        "operationId": "getQuoteForOutput",
        "parameters": [
          {
            "name": "tokenIn",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tokenOut",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "amountIn",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "chainId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerGetQuoteResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Returns the minimum expected output amount for a token trade, given an input amount",
        "tags": [
          "Exchange"
        ]
      }
    },
    "/v1/player/exchange/users/{entityId}/convert/input": {
      "post": {
        "operationId": "convertInput",
        "parameters": [
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlayerConvertTokenRequestInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerPlayerOperationResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Swap an exact amount of `tokenIn` for a minimum amount of `tokenOut`",
        "tags": [
          "Exchange"
        ]
      }
    },
    "/v1/player/exchange/users/{entityId}/convert/output": {
      "post": {
        "operationId": "convertToOutput",
        "parameters": [
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlayerConvertTokenRequestInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerPlayerOperationResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Swap a maximum amount of `tokenIn` for an exact amount of `tokenOut`",
        "tags": [
          "Exchange"
        ]
      }
    },
    "/v1/player/exchange/users/{entityId}/native/wrap": {
      "post": {
        "operationId": "wrapNative",
        "parameters": [
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlayerWrappingTokenInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerPlayerOperationResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Wrap an amount of native token to wrapped native token",
        "tags": [
          "Exchange"
        ]
      }
    },
    "/v1/player/exchange/users/{entityId}/native/unwrap": {
      "post": {
        "operationId": "unwrapNative",
        "parameters": [
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlayerUnwrappingTokenInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerPlayerOperationResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Unwrap an amount of wrapped to native token",
        "tags": [
          "Exchange"
        ]
      }
    },
    "/v1/player/sessions/users/{entityId}/request": {
      "post": {
        "deprecated": true,
        "operationId": "createSessionRequest",
        "parameters": [
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlayerGenerateSessionUrlRequestInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerGenerateSessionRequestResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "",
        "tags": [
          "Sessions"
        ],
        "x-sunset": "2025-07-01"
      }
    },
    "/v1/player/sessions/users/{entityId}/revoke": {
      "post": {
        "operationId": "revokeSession",
        "parameters": [
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlayerRevokeSessionRequestInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerPlayerOperationResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "",
        "tags": [
          "Sessions"
        ]
      }
    },
    "/v1/player/sessions/request/{requestId}": {
      "get": {
        "operationId": "getSessionRequest",
        "parameters": [
          {
            "name": "requestId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerGetSessionRequestResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "",
        "tags": [
          "Sessions"
        ]
      }
    },
    "/v1/player/sessions/users/{entityId}/active": {
      "get": {
        "operationId": "getAllActiveSessions",
        "parameters": [
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "chainId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerGetActiveSessionsResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "",
        "tags": [
          "Sessions"
        ]
      }
    },
    "/v1/player/sessions/users/{entityId}/{accountAddress}/active": {
      "get": {
        "deprecated": true,
        "operationId": "getActiveSession",
        "parameters": [
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountAddress",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "chainId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerGetActiveSessionResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "",
        "tags": [
          "Sessions"
        ],
        "x-sunset": "2025-03-01"
      }
    },
    "/v2/player/sessions/request": {
      "post": {
        "operationId": "createSessionRequestV2",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlayerGenerateSessionUrlRequestInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerGenerateSessionRequestResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "",
        "tags": [
          "Sessions"
        ]
      }
    },
    "/v2/player/sessions/users/{entityId}/{accountAddress}/active": {
      "get": {
        "operationId": "getActiveSessionV2",
        "parameters": [
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountAddress",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "chainId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerGetActiveSessionResponseV2"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "",
        "tags": [
          "Sessions"
        ]
      }
    },
    "/v1/connection/request": {
      "post": {
        "operationId": "createConnectionRequest",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlayerCreateConnectionRequestInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerCreateConnectionRequestResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "",
        "tags": [
          "Connector"
        ]
      }
    },
    "/v1/connection/request/{requestId}": {
      "get": {
        "operationId": "getConnectionRequest",
        "parameters": [
          {
            "name": "requestId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerGetConnectionRequestResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "",
        "tags": [
          "Connector"
        ]
      }
    },
    "/v1/player/stats/{assetAddress}": {
      "post": {
        "operationId": "getContractStats",
        "parameters": [
          {
            "name": "assetAddress",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlayerCommonStatsRequestInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerCommonStatsResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Get contract stats",
        "tags": [
          "Stats"
        ]
      }
    },
    "/v1/player/stats/{assetAddress}/assets/{assetId}": {
      "post": {
        "operationId": "getAssetStats",
        "parameters": [
          {
            "name": "assetAddress",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "assetId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlayerCommonStatsRequestInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerCommonStatsResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Get asset stats",
        "tags": [
          "Stats"
        ]
      }
    },
    "/v1/player/activity/users/{entityId}": {
      "post": {
        "operationId": "getUserActivity",
        "parameters": [
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlayerCommonUserActivityRequestInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerCommonActivityResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Get user activity",
        "tags": [
          "Activity"
        ]
      }
    },
    "/v1/player/activity/assets/{assetAddress}": {
      "post": {
        "operationId": "getContractActivity",
        "parameters": [
          {
            "name": "assetAddress",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlayerCommonContractActivityRequestInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerCommonActivityResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Get contract activity",
        "tags": [
          "Activity"
        ]
      }
    },
    "/v1/player/activity/assets/{assetAddress}/asset/{assetId}": {
      "post": {
        "operationId": "getAssetActivity",
        "parameters": [
          {
            "name": "assetAddress",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "assetId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlayerCommonAssetActivityRequestInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerCommonActivityResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Get asset activity",
        "tags": [
          "Activity"
        ]
      }
    },
    "/v1/player/ramp/on/{entityId}": {
      "post": {
        "operationId": "createOnrampRequest",
        "parameters": [
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlayerCreateOnrampRequestInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerPlayerOperationResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          },
          {
            "beam-api-key": []
          }
        ],
        "summary": "",
        "tags": [
          "Ramp"
        ]
      }
    },
    "/v1/contract/{contractAddress}/read": {
      "post": {
        "operationId": "readContract",
        "parameters": [
          {
            "name": "contractAddress",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlayerReadContractRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerReadContractResonse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Calls a readable contract function",
        "tags": [
          "Contract"
        ]
      }
    }
  },
  "info": {
    "title": "Player API",
    "description": "The Player API is a service to integrate your game with Beam",
    "version": "1.0.0",
    "contact": {}
  },
  "tags": [
    {
      "name": "Assets",
      "description": "Retrieve assets (ERC-20, ERC-721 and ERC1155) for profiles in your game"
    },
    {
      "name": "Transactions",
      "description": "Retrieve and create transactions on behalf of the profiles in your game"
    },
    {
      "name": "Marketplace",
      "description": "Manage listings and buy assets through the Beam marketplace"
    },
    {
      "name": "Operation",
      "description": "Used by Game SDKs to propagate transaction results like signing, sessions etc."
    },
    {
      "name": "Exchange",
      "description": "Convert tokens using an exchange for users in your game"
    },
    {
      "name": "Users",
      "description": "Retrieve and manage users in Beam"
    },
    {
      "name": "Activity",
      "description": "Retrieve activity for the users and tokens in your game"
    },
    {
      "name": "Stats",
      "description": "Retrieve stats for the assets in your game"
    },
    {
      "name": "Contract",
      "description": "Interact with your Contracts"
    }
  ],
  "servers": [],
  "components": {
    "securitySchemes": {
      "beam-api-key": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key"
      }
    },
    "schemas": {
      "PlayerBeamErrorResponse": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "integer",
            "minimum": 400,
            "maximum": 599
          },
          "error": {
            "type": "string"
          },
          "validation": {
            "type": "array",
            "items": {}
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        },
        "required": [
          "path",
          "timestamp",
          "status"
        ]
      },
      "PlayerGetAssetsForUserBodyInput": {
        "type": "object",
        "properties": {
          "sortDirection": {
            "default": "asc",
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "sortBy": {
            "default": "acquiredAt",
            "type": "string",
            "enum": [
              "acquiredAt",
              "lastAppraisalValue"
            ]
          },
          "contract": {
            "default": null,
            "type": "string",
            "nullable": true
          },
          "includeAttributes": {
            "default": false,
            "type": "boolean",
            "nullable": true
          },
          "continuation": {
            "default": null,
            "type": "string",
            "nullable": true
          },
          "chainId": {
            "default": 13337,
            "type": "integer",
            "format": "int64"
          },
          "limit": {
            "default": 20,
            "type": "number",
            "minimum": 1,
            "maximum": 100
          }
        }
      },
      "PlayerGetAssetsForUserResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "imageUrl": {
                  "type": "string"
                },
                "assetType": {
                  "type": "string"
                },
                "assetAddress": {
                  "type": "string"
                },
                "assetId": {
                  "type": "string"
                },
                "supply": {
                  "type": "number"
                },
                "rarity": {
                  "type": "string",
                  "enum": [
                    "Common",
                    "Uncommon",
                    "Rare",
                    "VeryRare",
                    "ExtremelyRare"
                  ],
                  "nullable": true
                },
                "rarityScore": {
                  "type": "number",
                  "nullable": true
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                },
                "mintedAt": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                },
                "attributes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "displayType": {
                        "type": "string",
                        "nullable": true
                      },
                      "maxValue": {
                        "type": "number",
                        "nullable": true
                      },
                      "rarity": {
                        "type": "number",
                        "nullable": true
                      },
                      "type": {
                        "type": "string",
                        "nullable": true
                      },
                      "value": {
                        "type": "string",
                        "nullable": true
                      }
                    }
                  },
                  "nullable": true
                },
                "chainId": {
                  "default": 13337,
                  "type": "integer",
                  "format": "int64"
                },
                "ownedQuantity": {
                  "type": "number"
                }
              },
              "required": [
                "name",
                "imageUrl",
                "assetType",
                "assetAddress",
                "assetId",
                "supply",
                "ownedQuantity"
              ]
            }
          },
          "continuation": {
            "default": null,
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "data"
        ]
      },
      "PlayerGetUserCurrenciesResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "address": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "symbol": {
                  "type": "string"
                },
                "decimals": {
                  "type": "number"
                },
                "logoUri": {
                  "type": "string"
                },
                "chainId": {
                  "type": "integer",
                  "format": "int64"
                },
                "balance": {
                  "type": "string"
                }
              },
              "required": [
                "address",
                "name",
                "symbol",
                "decimals",
                "chainId",
                "balance"
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "PlayerGetUserNativeCurrencyResponse": {
        "type": "object",
        "properties": {
          "nativeTokenBalance": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "symbol": {
                "type": "string"
              },
              "decimals": {
                "type": "number"
              },
              "logoUri": {
                "type": "string"
              },
              "chainId": {
                "type": "integer",
                "format": "int64"
              },
              "balance": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "symbol",
              "decimals",
              "chainId",
              "balance"
            ]
          }
        },
        "required": [
          "nativeTokenBalance"
        ]
      },
      "PlayerTransferAssetRequestInput": {
        "type": "object",
        "properties": {
          "assets": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "receiverEntityId": {
                  "type": "string"
                },
                "receiverWalletAddress": {
                  "type": "string"
                },
                "assetAddress": {
                  "type": "string"
                },
                "assetId": {
                  "type": "string",
                  "pattern": "^\\d+$"
                },
                "amountToTransfer": {
                  "default": 1,
                  "type": "number",
                  "multipleOf": 1,
                  "minimum": 1
                }
              },
              "required": [
                "assetAddress",
                "assetId"
              ]
            },
            "minItems": 1,
            "maxItems": 9
          },
          "optimistic": {
            "default": false,
            "type": "boolean"
          },
          "sponsor": {
            "default": true,
            "type": "boolean"
          },
          "policyId": {
            "default": null,
            "type": "string",
            "format": "cuid",
            "nullable": true
          },
          "chainId": {
            "default": 13337,
            "type": "integer",
            "format": "int64"
          },
          "operationProcessing": {
            "default": "Execute",
            "type": "string",
            "enum": [
              "SignOnly",
              "Execute"
            ],
            "description": "Operation processing type. If Execute is used, Operation will be executed automatically right after User signs it. If you prefer to have more control, use SignOnly then Process it using ProcessOperation."
          },
          "authProvider": {
            "default": "Any",
            "type": "string",
            "enum": [
              "Any",
              "Google",
              "Discord",
              "Apple"
            ],
            "nullable": true,
            "description": "Auth Provider for the user to use. If it's Any, user will be able to choose his preferred login method. Useful when you want to present social login choice in your UI."
          }
        },
        "required": [
          "assets"
        ]
      },
      "PlayerPlayerOperationResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "Pending",
              "Signed",
              "Rejected",
              "Executed",
              "Error"
            ]
          },
          "processing": {
            "type": "string",
            "enum": [
              "SignOnly",
              "Execute"
            ]
          },
          "authProvider": {
            "type": "string",
            "enum": [
              "Any",
              "Google",
              "Discord",
              "Apple"
            ]
          },
          "id": {
            "type": "string",
            "format": "cuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "gameId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "chainId": {
            "type": "integer",
            "format": "int64"
          },
          "actions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "FiatOnRamp",
                    "Sign",
                    "SessionRevoke",
                    "MarketplaceCreateOffer",
                    "MarketplaceCancelOffer",
                    "MarketplaceAcceptOffer",
                    "MarketplaceBuyAsset",
                    "MarketplaceListAsset",
                    "MarketplaceCancelListing",
                    "ExchangeConvert",
                    "ExchangeWrap",
                    "ExchangeUnwrap",
                    "TransferNFTs",
                    "TransferToken",
                    "CustomTransaction"
                  ]
                },
                "id": {
                  "type": "string",
                  "format": "cuid"
                },
                "index": {
                  "type": "integer"
                },
                "operationId": {
                  "type": "string",
                  "nullable": true
                },
                "context": {
                  "nullable": true
                },
                "signature": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "Message",
                        "TypedData"
                      ]
                    },
                    "id": {
                      "type": "string",
                      "format": "cuid"
                    },
                    "data": {
                      "nullable": true
                    },
                    "signature": {
                      "type": "string",
                      "nullable": true
                    },
                    "actionId": {
                      "type": "string",
                      "nullable": true
                    },
                    "hash": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "required": [
                    "type",
                    "id",
                    "signature",
                    "actionId"
                  ],
                  "nullable": true
                },
                "transaction": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "Pending",
                        "Signed",
                        "Rejected",
                        "Executed",
                        "Error"
                      ]
                    },
                    "id": {
                      "type": "string",
                      "format": "cuid"
                    },
                    "openfortId": {
                      "type": "string",
                      "nullable": true
                    },
                    "sponsored": {
                      "type": "boolean"
                    },
                    "actionId": {
                      "type": "string",
                      "nullable": true
                    },
                    "hash": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "required": [
                    "status",
                    "id",
                    "openfortId",
                    "sponsored",
                    "actionId",
                    "hash"
                  ],
                  "nullable": true
                }
              },
              "required": [
                "type",
                "id",
                "index",
                "operationId"
              ],
              "title": "PlayerOperationAction"
            }
          },
          "transactions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "Pending",
                    "Signed",
                    "Rejected",
                    "Executed",
                    "Error"
                  ]
                },
                "id": {
                  "type": "string",
                  "format": "cuid"
                },
                "openfortId": {
                  "type": "string",
                  "nullable": true
                },
                "sponsored": {
                  "type": "boolean"
                },
                "actionId": {
                  "type": "string",
                  "nullable": true
                },
                "hash": {
                  "type": "string",
                  "nullable": true
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "OpenfortTransaction",
                    "OpenfortReservoirOrder",
                    "OpenfortRevokeSession"
                  ],
                  "nullable": true
                },
                "externalId": {
                  "type": "string",
                  "nullable": true
                },
                "signature": {
                  "type": "string",
                  "nullable": true
                },
                "transactionHash": {
                  "type": "string",
                  "nullable": true
                },
                "operationId": {
                  "type": "string",
                  "format": "cuid",
                  "nullable": true
                },
                "data": {
                  "nullable": true
                }
              },
              "required": [
                "status",
                "id",
                "openfortId",
                "sponsored",
                "actionId",
                "type",
                "externalId",
                "signature",
                "transactionHash",
                "operationId"
              ]
            },
            "deprecated": true
          },
          "url": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "status",
          "processing",
          "authProvider",
          "id",
          "createdAt",
          "updatedAt",
          "gameId",
          "userId",
          "chainId",
          "actions",
          "transactions",
          "url"
        ]
      },
      "PlayerTransferTokenRequestInput": {
        "type": "object",
        "properties": {
          "receiverEntityId": {
            "type": "string"
          },
          "receiverWalletAddress": {
            "type": "string"
          },
          "assetAddress": {
            "type": "string"
          },
          "amountToTransfer": {
            "type": "string"
          },
          "optimistic": {
            "default": false,
            "type": "boolean"
          },
          "sponsor": {
            "default": true,
            "type": "boolean"
          },
          "policyId": {
            "default": null,
            "type": "string",
            "format": "cuid",
            "nullable": true
          },
          "chainId": {
            "default": 13337,
            "type": "integer",
            "format": "int64"
          },
          "operationProcessing": {
            "default": "Execute",
            "type": "string",
            "enum": [
              "SignOnly",
              "Execute"
            ],
            "description": "Operation processing type. If Execute is used, Operation will be executed automatically right after User signs it. If you prefer to have more control, use SignOnly then Process it using ProcessOperation."
          },
          "authProvider": {
            "default": "Any",
            "type": "string",
            "enum": [
              "Any",
              "Google",
              "Discord",
              "Apple"
            ],
            "nullable": true,
            "description": "Auth Provider for the user to use. If it's Any, user will be able to choose his preferred login method. Useful when you want to present social login choice in your UI."
          }
        },
        "required": [
          "assetAddress",
          "amountToTransfer"
        ]
      },
      "PlayerTransferNativeTokenRequestInput": {
        "type": "object",
        "properties": {
          "receiverEntityId": {
            "type": "string"
          },
          "receiverWalletAddress": {
            "type": "string"
          },
          "amountToTransfer": {
            "type": "string"
          },
          "optimistic": {
            "default": false,
            "type": "boolean"
          },
          "sponsor": {
            "default": true,
            "type": "boolean"
          },
          "policyId": {
            "default": null,
            "type": "string",
            "format": "cuid",
            "nullable": true
          },
          "chainId": {
            "default": 13337,
            "type": "integer",
            "format": "int64"
          },
          "operationProcessing": {
            "default": "Execute",
            "type": "string",
            "enum": [
              "SignOnly",
              "Execute"
            ],
            "description": "Operation processing type. If Execute is used, Operation will be executed automatically right after User signs it. If you prefer to have more control, use SignOnly then Process it using ProcessOperation."
          },
          "authProvider": {
            "default": "Any",
            "type": "string",
            "enum": [
              "Any",
              "Google",
              "Discord",
              "Apple"
            ],
            "nullable": true,
            "description": "Auth Provider for the user to use. If it's Any, user will be able to choose his preferred login method. Useful when you want to present social login choice in your UI."
          }
        },
        "required": [
          "amountToTransfer"
        ]
      },
      "PlayerGetAssetsForContractBodyInput": {
        "type": "object",
        "properties": {
          "continuation": {
            "default": null,
            "type": "string",
            "nullable": true
          },
          "chainId": {
            "default": 13337,
            "type": "integer",
            "format": "int64"
          },
          "minRarityRank": {
            "default": null,
            "type": "integer",
            "nullable": true
          },
          "maxRarityRank": {
            "default": null,
            "type": "integer",
            "nullable": true
          },
          "minFloorAskPrice": {
            "default": null,
            "type": "number",
            "nullable": true
          },
          "maxFloorAskPrice": {
            "default": null,
            "type": "number",
            "nullable": true
          },
          "includeAttributes": {
            "default": false,
            "type": "boolean",
            "nullable": true
          },
          "attributes": {
            "default": null,
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "key": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              },
              "required": [
                "key",
                "value"
              ]
            },
            "nullable": true
          },
          "sortDirection": {
            "default": "asc",
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "sortBy": {
            "default": "floorAskPrice",
            "type": "string",
            "enum": [
              "floorAskPrice",
              "tokenId",
              "rarity",
              "updatedAt",
              "mintedAt"
            ]
          },
          "limit": {
            "default": 20,
            "type": "number",
            "minimum": 1,
            "maximum": 100
          }
        }
      },
      "PlayerGetAssetsForContractResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "imageUrl": {
                  "type": "string"
                },
                "assetType": {
                  "type": "string"
                },
                "assetAddress": {
                  "type": "string"
                },
                "assetId": {
                  "type": "string"
                },
                "supply": {
                  "type": "number"
                },
                "rarity": {
                  "type": "string",
                  "enum": [
                    "Common",
                    "Uncommon",
                    "Rare",
                    "VeryRare",
                    "ExtremelyRare"
                  ],
                  "nullable": true
                },
                "rarityScore": {
                  "type": "number",
                  "nullable": true
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                },
                "mintedAt": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                },
                "attributes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "displayType": {
                        "type": "string",
                        "nullable": true
                      },
                      "maxValue": {
                        "type": "number",
                        "nullable": true
                      },
                      "rarity": {
                        "type": "number",
                        "nullable": true
                      },
                      "type": {
                        "type": "string",
                        "nullable": true
                      },
                      "value": {
                        "type": "string",
                        "nullable": true
                      }
                    }
                  },
                  "nullable": true
                },
                "chainId": {
                  "default": 13337,
                  "type": "integer",
                  "format": "int64"
                }
              },
              "required": [
                "name",
                "imageUrl",
                "assetType",
                "assetAddress",
                "assetId",
                "supply"
              ]
            }
          },
          "continuation": {
            "default": null,
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "data"
        ]
      },
      "PlayerGetAssetResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "assetType": {
            "type": "string"
          },
          "assetAddress": {
            "type": "string"
          },
          "assetId": {
            "type": "string"
          },
          "supply": {
            "type": "number"
          },
          "owners": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "address": {
                  "type": "string"
                },
                "quantity": {
                  "type": "number"
                },
                "entityId": {
                  "type": "string"
                }
              },
              "required": [
                "address",
                "quantity"
              ]
            },
            "nullable": true
          },
          "rarity": {
            "type": "string",
            "enum": [
              "Common",
              "Uncommon",
              "Rare",
              "VeryRare",
              "ExtremelyRare"
            ],
            "nullable": true
          },
          "rarityScore": {
            "type": "number",
            "nullable": true
          },
          "attributes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "displayType": {
                  "type": "string",
                  "nullable": true
                },
                "maxValue": {
                  "type": "number",
                  "nullable": true
                },
                "rarity": {
                  "type": "number",
                  "nullable": true
                },
                "type": {
                  "type": "string",
                  "nullable": true
                },
                "value": {
                  "type": "string",
                  "nullable": true
                }
              }
            },
            "nullable": true
          },
          "chainId": {
            "default": 13337,
            "type": "integer",
            "format": "int64"
          }
        },
        "required": [
          "name",
          "imageUrl",
          "assetType",
          "assetAddress",
          "assetId",
          "supply",
          "owners"
        ]
      },
      "PlayerGetAttributesResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "key": {
                  "type": "string"
                },
                "kind": {
                  "type": "string",
                  "enum": [
                    "string",
                    "number",
                    "date",
                    "range"
                  ]
                },
                "values": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "count": {
                        "type": "number",
                        "nullable": true
                      },
                      "value": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "value"
                    ]
                  },
                  "nullable": true
                }
              },
              "required": [
                "key",
                "kind"
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "PlayerGetOwnersResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "address": {
                  "type": "string",
                  "nullable": true
                },
                "quantity": {
                  "type": "number",
                  "nullable": true
                }
              }
            }
          },
          "pagination": {
            "type": "object",
            "properties": {
              "count": {
                "type": "number"
              },
              "limit": {
                "default": 10,
                "type": "number"
              },
              "offset": {
                "default": 0,
                "type": "number"
              }
            },
            "required": [
              "count"
            ]
          }
        },
        "required": [
          "data",
          "pagination"
        ]
      },
      "PlayerGetOwnerAssetsBodyInput": {
        "type": "object",
        "properties": {
          "sortDirection": {
            "default": "asc",
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "sortBy": {
            "default": "acquiredAt",
            "type": "string",
            "enum": [
              "acquiredAt",
              "lastAppraisalValue"
            ]
          },
          "includeAttributes": {
            "default": false,
            "type": "boolean",
            "nullable": true
          },
          "continuation": {
            "default": null,
            "type": "string",
            "nullable": true
          },
          "chainId": {
            "default": 13337,
            "type": "integer",
            "format": "int64"
          },
          "limit": {
            "default": 20,
            "type": "number",
            "minimum": 1,
            "maximum": 100
          }
        }
      },
      "PlayerGetOwnerAssetsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "imageUrl": {
                  "type": "string"
                },
                "assetType": {
                  "type": "string"
                },
                "assetAddress": {
                  "type": "string"
                },
                "assetId": {
                  "type": "string"
                },
                "supply": {
                  "type": "number"
                },
                "rarity": {
                  "type": "string",
                  "enum": [
                    "Common",
                    "Uncommon",
                    "Rare",
                    "VeryRare",
                    "ExtremelyRare"
                  ],
                  "nullable": true
                },
                "rarityScore": {
                  "type": "number",
                  "nullable": true
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                },
                "mintedAt": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                },
                "attributes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "displayType": {
                        "type": "string",
                        "nullable": true
                      },
                      "maxValue": {
                        "type": "number",
                        "nullable": true
                      },
                      "rarity": {
                        "type": "number",
                        "nullable": true
                      },
                      "type": {
                        "type": "string",
                        "nullable": true
                      },
                      "value": {
                        "type": "string",
                        "nullable": true
                      }
                    }
                  },
                  "nullable": true
                },
                "chainId": {
                  "default": 13337,
                  "type": "integer",
                  "format": "int64"
                },
                "ownedQuantity": {
                  "type": "number"
                }
              },
              "required": [
                "name",
                "imageUrl",
                "assetType",
                "assetAddress",
                "assetId",
                "supply",
                "ownedQuantity"
              ]
            }
          },
          "continuation": {
            "default": null,
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "data"
        ]
      },
      "PlayerGetListedAssetsBodyInput": {
        "type": "object",
        "properties": {
          "assetAddresses": {
            "default": null,
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "sortBy": {
            "default": "createdAt",
            "type": "string",
            "enum": [
              "createdAt",
              "updatedAt",
              "price"
            ]
          },
          "sortDirection": {
            "default": "desc",
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ],
            "description": "If using `createdAt` for sorting, only `desc` is allowed."
          },
          "limit": {
            "default": 50,
            "type": "integer",
            "minimum": 1,
            "maximum": 1000
          },
          "chainId": {
            "default": 13337,
            "type": "integer",
            "format": "int64"
          },
          "continuation": {
            "default": null,
            "type": "string",
            "nullable": true
          }
        }
      },
      "PlayerGetAssetListingsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "side": {
                  "type": "string"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "active",
                    "inactive",
                    "expired",
                    "canceled",
                    "filled"
                  ],
                  "nullable": true
                },
                "assetAddress": {
                  "type": "string"
                },
                "assetId": {
                  "type": "string"
                },
                "contractKind": {
                  "type": "string"
                },
                "maker": {
                  "type": "string"
                },
                "price": {
                  "type": "object",
                  "properties": {
                    "currency": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "type": "string"
                        },
                        "symbol": {
                          "type": "string",
                          "enum": [
                            "BEAM",
                            "SOPH",
                            "WBEAM",
                            "WSOPH",
                            "RAT",
                            "USDC"
                          ],
                          "nullable": true
                        },
                        "decimals": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "address",
                        "decimals"
                      ],
                      "nullable": true
                    },
                    "amount": {
                      "type": "object",
                      "properties": {
                        "raw": {
                          "type": "string"
                        },
                        "decimal": {
                          "type": "number"
                        },
                        "usd": {
                          "type": "number"
                        },
                        "native": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "raw",
                        "decimal",
                        "usd",
                        "native"
                      ],
                      "nullable": true
                    },
                    "netAmount": {
                      "type": "object",
                      "properties": {
                        "raw": {
                          "type": "string"
                        },
                        "decimal": {
                          "type": "number"
                        },
                        "usd": {
                          "type": "number"
                        },
                        "native": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "raw",
                        "decimal",
                        "usd",
                        "native"
                      ],
                      "nullable": true
                    }
                  },
                  "nullable": true
                },
                "validFrom": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                },
                "validUntil": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                },
                "quantityFilled": {
                  "type": "number"
                },
                "quantityRemaining": {
                  "type": "number"
                },
                "expiresAt": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                }
              },
              "required": [
                "id",
                "side",
                "assetAddress",
                "assetId",
                "contractKind",
                "maker"
              ]
            }
          },
          "continuation": {
            "default": null,
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "data"
        ]
      },
      "PlayerSellAssetRequestInput": {
        "type": "object",
        "properties": {
          "assetAddress": {
            "type": "string"
          },
          "assetId": {
            "type": "string",
            "pattern": "^\\d+$"
          },
          "quantity": {
            "type": "number"
          },
          "price": {
            "type": "string"
          },
          "startTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Date time string with YYYY-MM-DDTHH:mm:ss.sssZ format or Unix timestamp in milliseconds"
          },
          "endTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Date time string with YYYY-MM-DDTHH:mm:ss.sssZ format or Unix timestamp in milliseconds"
          },
          "sellType": {
            "type": "string",
            "enum": [
              "FixedPrice",
              "DescendingAuction",
              "AscendingAuction",
              "NotForSale"
            ]
          },
          "currency": {
            "default": "BEAM",
            "type": "string",
            "enum": [
              "BEAM",
              "SOPH",
              "WBEAM",
              "WSOPH",
              "RAT",
              "USDC"
            ]
          },
          "sponsor": {
            "default": true,
            "type": "boolean"
          },
          "policyId": {
            "default": null,
            "type": "string",
            "format": "cuid",
            "nullable": true
          },
          "chainId": {
            "default": 13337,
            "type": "integer",
            "format": "int64"
          },
          "operationProcessing": {
            "default": "Execute",
            "type": "string",
            "enum": [
              "SignOnly",
              "Execute"
            ],
            "description": "Operation processing type. If Execute is used, Operation will be executed automatically right after User signs it. If you prefer to have more control, use SignOnly then Process it using ProcessOperation."
          },
          "authProvider": {
            "default": "Any",
            "type": "string",
            "enum": [
              "Any",
              "Google",
              "Discord",
              "Apple"
            ],
            "nullable": true,
            "description": "Auth Provider for the user to use. If it's Any, user will be able to choose his preferred login method. Useful when you want to present social login choice in your UI."
          }
        },
        "required": [
          "assetAddress",
          "assetId",
          "quantity",
          "price",
          "sellType"
        ]
      },
      "PlayerBuyAssetRequestInput": {
        "type": "object",
        "properties": {
          "quantity": {
            "type": "number"
          },
          "optimistic": {
            "default": false,
            "type": "boolean"
          },
          "sponsor": {
            "default": true,
            "type": "boolean"
          },
          "policyId": {
            "default": null,
            "type": "string",
            "format": "cuid",
            "nullable": true
          },
          "chainId": {
            "default": 13337,
            "type": "integer",
            "format": "int64"
          },
          "operationProcessing": {
            "default": "Execute",
            "type": "string",
            "enum": [
              "SignOnly",
              "Execute"
            ],
            "description": "Operation processing type. If Execute is used, Operation will be executed automatically right after User signs it. If you prefer to have more control, use SignOnly then Process it using ProcessOperation."
          },
          "authProvider": {
            "default": "Any",
            "type": "string",
            "enum": [
              "Any",
              "Google",
              "Discord",
              "Apple"
            ],
            "nullable": true,
            "description": "Auth Provider for the user to use. If it's Any, user will be able to choose his preferred login method. Useful when you want to present social login choice in your UI."
          }
        },
        "required": [
          "quantity"
        ]
      },
      "PlayerCancelAssetListingRequestInput": {
        "type": "object",
        "properties": {
          "optimistic": {
            "default": false,
            "type": "boolean"
          },
          "sponsor": {
            "default": true,
            "type": "boolean"
          },
          "policyId": {
            "default": null,
            "type": "string",
            "format": "cuid",
            "nullable": true
          },
          "operationProcessing": {
            "default": "Execute",
            "type": "string",
            "enum": [
              "SignOnly",
              "Execute"
            ],
            "description": "Operation processing type. If Execute is used, Operation will be executed automatically right after User signs it. If you prefer to have more control, use SignOnly then Process it using ProcessOperation."
          },
          "authProvider": {
            "default": "Any",
            "type": "string",
            "enum": [
              "Any",
              "Google",
              "Discord",
              "Apple"
            ],
            "nullable": true,
            "description": "Auth Provider for the user to use. If it's Any, user will be able to choose his preferred login method. Useful when you want to present social login choice in your UI."
          }
        }
      },
      "PlayerCreateAssetOfferRequestInput": {
        "type": "object",
        "properties": {
          "assetAddress": {
            "type": "string"
          },
          "assetId": {
            "type": "string",
            "pattern": "^\\d+$"
          },
          "quantity": {
            "type": "number",
            "minimum": 1
          },
          "price": {
            "type": "string"
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          },
          "currency": {
            "default": "WBEAM",
            "type": "string",
            "enum": [
              "WBEAM",
              "WSOPH",
              "RAT",
              "USDC"
            ]
          },
          "chainId": {
            "default": 13337,
            "type": "integer",
            "format": "int64"
          },
          "operationProcessing": {
            "default": "Execute",
            "type": "string",
            "enum": [
              "SignOnly",
              "Execute"
            ],
            "description": "Operation processing type. If Execute is used, Operation will be executed automatically right after User signs it. If you prefer to have more control, use SignOnly then Process it using ProcessOperation."
          },
          "authProvider": {
            "default": "Any",
            "type": "string",
            "enum": [
              "Any",
              "Google",
              "Discord",
              "Apple"
            ],
            "nullable": true,
            "description": "Auth Provider for the user to use. If it's Any, user will be able to choose his preferred login method. Useful when you want to present social login choice in your UI."
          }
        },
        "required": [
          "assetAddress",
          "assetId",
          "quantity",
          "price"
        ]
      },
      "PlayerAcceptAssetOfferRequestInput": {
        "type": "object",
        "properties": {
          "quantity": {
            "type": "number",
            "minimum": 1
          },
          "optimistic": {
            "default": false,
            "type": "boolean"
          },
          "sponsor": {
            "default": true,
            "type": "boolean"
          },
          "policyId": {
            "default": null,
            "type": "string",
            "format": "cuid",
            "nullable": true
          },
          "chainId": {
            "default": 13337,
            "type": "integer",
            "format": "int64"
          },
          "operationProcessing": {
            "default": "Execute",
            "type": "string",
            "enum": [
              "SignOnly",
              "Execute"
            ],
            "description": "Operation processing type. If Execute is used, Operation will be executed automatically right after User signs it. If you prefer to have more control, use SignOnly then Process it using ProcessOperation."
          },
          "authProvider": {
            "default": "Any",
            "type": "string",
            "enum": [
              "Any",
              "Google",
              "Discord",
              "Apple"
            ],
            "nullable": true,
            "description": "Auth Provider for the user to use. If it's Any, user will be able to choose his preferred login method. Useful when you want to present social login choice in your UI."
          }
        },
        "required": [
          "quantity"
        ]
      },
      "PlayerCancelAssetOfferRequestInput": {
        "type": "object",
        "properties": {
          "optimistic": {
            "default": false,
            "type": "boolean"
          },
          "sponsor": {
            "default": true,
            "type": "boolean"
          },
          "policyId": {
            "default": null,
            "type": "string",
            "format": "cuid",
            "nullable": true
          },
          "operationProcessing": {
            "default": "Execute",
            "type": "string",
            "enum": [
              "SignOnly",
              "Execute"
            ],
            "description": "Operation processing type. If Execute is used, Operation will be executed automatically right after User signs it. If you prefer to have more control, use SignOnly then Process it using ProcessOperation."
          },
          "authProvider": {
            "default": "Any",
            "type": "string",
            "enum": [
              "Any",
              "Google",
              "Discord",
              "Apple"
            ],
            "nullable": true,
            "description": "Auth Provider for the user to use. If it's Any, user will be able to choose his preferred login method. Useful when you want to present social login choice in your UI."
          },
          "chainId": {
            "default": 13337,
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PlayerGetChainCurrenciesResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "decimals": {
                  "type": "number"
                },
                "symbol": {
                  "type": "string",
                  "enum": [
                    "BEAM",
                    "SOPH",
                    "WBEAM",
                    "WSOPH",
                    "RAT",
                    "USDC"
                  ]
                },
                "address": {
                  "type": "string"
                }
              },
              "required": [
                "decimals",
                "symbol",
                "address"
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "PlayerRefreshTokenRequestBody": {
        "type": "object",
        "properties": {
          "assetAddress": {
            "type": "string"
          },
          "tokenId": {
            "type": "string",
            "pattern": "^\\d+$"
          },
          "chainId": {
            "default": 13337,
            "type": "integer",
            "format": "int64"
          }
        },
        "required": [
          "assetAddress",
          "tokenId"
        ]
      },
      "PlayerRefreshContractRequestBody": {
        "type": "object",
        "properties": {
          "assetAddress": {
            "type": "string"
          },
          "chainId": {
            "default": 13337,
            "type": "integer",
            "format": "int64"
          }
        },
        "required": [
          "assetAddress"
        ]
      },
      "PlayerGetTransactionsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "chainId": {
                  "type": "integer",
                  "format": "int64"
                },
                "intent": {
                  "type": "object",
                  "properties": {
                    "interactions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "to": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          },
                          "contract": {
                            "type": "string"
                          },
                          "functionName": {
                            "type": "string"
                          },
                          "functionArgs": {
                            "type": "array",
                            "items": {}
                          }
                        }
                      },
                      "nullable": true
                    },
                    "message": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                },
                "transaction": {
                  "type": "object",
                  "properties": {
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "blockNumber": {
                      "type": "number"
                    },
                    "hash": {
                      "type": "string"
                    },
                    "gasUsed": {
                      "type": "string"
                    },
                    "gasFee": {
                      "type": "string"
                    },
                    "status": {
                      "type": "number"
                    },
                    "logs": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "blockNumber": {
                            "type": "number"
                          },
                          "blockHash": {
                            "type": "string"
                          },
                          "transactionIndex": {
                            "type": "number"
                          },
                          "removed": {
                            "type": "boolean"
                          },
                          "address": {
                            "type": "string"
                          },
                          "data": {
                            "type": "string"
                          },
                          "topics": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "transactionHash": {
                            "type": "string"
                          },
                          "logIndex": {
                            "type": "number"
                          },
                          "orphaned": {
                            "type": "boolean",
                            "nullable": true
                          }
                        },
                        "required": [
                          "blockNumber",
                          "blockHash",
                          "transactionIndex",
                          "removed",
                          "address",
                          "data",
                          "topics",
                          "transactionHash",
                          "logIndex"
                        ]
                      }
                    }
                  },
                  "required": [
                    "createdAt"
                  ],
                  "nullable": true,
                  "description": "The transaction object exists if you created the transaction deterministically and contains information about the on-chain transaction"
                }
              },
              "required": [
                "id",
                "createdAt",
                "updatedAt",
                "chainId",
                "intent"
              ]
            }
          },
          "pagination": {
            "type": "object",
            "properties": {
              "count": {
                "type": "number"
              },
              "limit": {
                "default": 10,
                "type": "number"
              },
              "offset": {
                "default": 0,
                "type": "number"
              }
            },
            "required": [
              "count"
            ]
          }
        },
        "required": [
          "data",
          "pagination"
        ]
      },
      "PlayerGetTransactionResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "chainId": {
            "type": "integer",
            "format": "int64"
          },
          "intent": {
            "type": "object",
            "properties": {
              "interactions": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "to": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "contract": {
                      "type": "string"
                    },
                    "functionName": {
                      "type": "string"
                    },
                    "functionArgs": {
                      "type": "array",
                      "items": {}
                    }
                  }
                },
                "nullable": true
              },
              "message": {
                "type": "string",
                "nullable": true
              }
            }
          },
          "transaction": {
            "type": "object",
            "properties": {
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "blockNumber": {
                "type": "number"
              },
              "hash": {
                "type": "string"
              },
              "gasUsed": {
                "type": "string"
              },
              "gasFee": {
                "type": "string"
              },
              "status": {
                "type": "number"
              },
              "logs": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "blockNumber": {
                      "type": "number"
                    },
                    "blockHash": {
                      "type": "string"
                    },
                    "transactionIndex": {
                      "type": "number"
                    },
                    "removed": {
                      "type": "boolean"
                    },
                    "address": {
                      "type": "string"
                    },
                    "data": {
                      "type": "string"
                    },
                    "topics": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "transactionHash": {
                      "type": "string"
                    },
                    "logIndex": {
                      "type": "number"
                    },
                    "orphaned": {
                      "type": "boolean",
                      "nullable": true
                    }
                  },
                  "required": [
                    "blockNumber",
                    "blockHash",
                    "transactionIndex",
                    "removed",
                    "address",
                    "data",
                    "topics",
                    "transactionHash",
                    "logIndex"
                  ]
                }
              }
            },
            "required": [
              "createdAt"
            ],
            "nullable": true,
            "description": "The transaction object exists if you created the transaction deterministically and contains information about the on-chain transaction"
          },
          "policy": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "cuid",
                "nullable": true
              }
            },
            "description": "Policy information related to the transaction"
          },
          "user": {
            "type": "object",
            "properties": {
              "entities": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "entityId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "entityId"
                  ]
                }
              },
              "wallet": {
                "type": "object",
                "properties": {
                  "address": {
                    "type": "string"
                  }
                },
                "required": [
                  "address"
                ]
              }
            },
            "required": [
              "entities",
              "wallet"
            ],
            "description": "User and wallet information related to the transaction"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "chainId",
          "intent",
          "policy",
          "user"
        ]
      },
      "PlayerCreateTransactionRequestInput": {
        "type": "object",
        "properties": {
          "interactions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "contractAddress": {
                  "type": "string"
                },
                "functionName": {
                  "type": "string"
                },
                "functionArgs": {
                  "default": [],
                  "type": "array",
                  "items": {}
                },
                "value": {
                  "type": "string"
                }
              },
              "required": [
                "contractAddress",
                "functionName"
              ]
            },
            "minItems": 1,
            "maxItems": 9
          },
          "optimistic": {
            "default": false,
            "type": "boolean"
          },
          "sponsor": {
            "default": true,
            "type": "boolean"
          },
          "policyId": {
            "default": null,
            "type": "string",
            "format": "cuid",
            "nullable": true
          },
          "chainId": {
            "default": 13337,
            "type": "integer",
            "format": "int64"
          },
          "operationProcessing": {
            "default": "Execute",
            "type": "string",
            "enum": [
              "SignOnly",
              "Execute"
            ],
            "description": "Operation processing type. If Execute is used, Operation will be executed automatically right after User signs it. If you prefer to have more control, use SignOnly then Process it using ProcessOperation."
          },
          "authProvider": {
            "default": "Any",
            "type": "string",
            "enum": [
              "Any",
              "Google",
              "Discord",
              "Apple"
            ],
            "nullable": true,
            "description": "Auth Provider for the user to use. If it's Any, user will be able to choose his preferred login method. Useful when you want to present social login choice in your UI."
          }
        },
        "required": [
          "interactions"
        ]
      },
      "PlayerGetAllUsersResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "wallets": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "cuid"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "externalId": {
                        "type": "string"
                      },
                      "address": {
                        "type": "string"
                      },
                      "chainId": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "profileId": {
                        "type": "string",
                        "nullable": true
                      },
                      "userId": {
                        "type": "string",
                        "nullable": true
                      }
                    },
                    "required": [
                      "id",
                      "createdAt",
                      "updatedAt",
                      "externalId",
                      "address",
                      "chainId",
                      "profileId",
                      "userId"
                    ]
                  }
                },
                "entities": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "entityId": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "entityId"
                    ]
                  }
                }
              },
              "required": [
                "id",
                "wallets",
                "entities"
              ]
            }
          },
          "pagination": {
            "type": "object",
            "properties": {
              "count": {
                "type": "number"
              },
              "limit": {
                "default": 10,
                "type": "number"
              },
              "offset": {
                "default": 0,
                "type": "number"
              }
            },
            "required": [
              "count"
            ]
          }
        },
        "required": [
          "data",
          "pagination"
        ]
      },
      "PlayerGetUserResponse": {
        "type": "object",
        "properties": {
          "externalEntityId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "gameId": {
            "type": "string"
          },
          "wallets": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "cuid"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "externalId": {
                  "type": "string"
                },
                "address": {
                  "type": "string"
                },
                "chainId": {
                  "type": "integer",
                  "format": "int64"
                },
                "profileId": {
                  "type": "string",
                  "nullable": true
                },
                "userId": {
                  "type": "string",
                  "nullable": true
                }
              },
              "required": [
                "id",
                "createdAt",
                "updatedAt",
                "externalId",
                "address",
                "chainId",
                "profileId",
                "userId"
              ]
            }
          },
          "entities": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "entityId": {
                  "type": "string"
                }
              },
              "required": [
                "entityId"
              ]
            }
          }
        },
        "required": [
          "externalEntityId",
          "userId",
          "gameId",
          "wallets",
          "entities"
        ]
      },
      "PlayerUpdateUserRequest": {
        "type": "object",
        "properties": {
          "newEntityId": {
            "type": "string"
          }
        },
        "required": [
          "newEntityId"
        ]
      },
      "PlayerConfirmOperationRequest": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "Pending",
              "Signed",
              "Rejected",
              "Executed",
              "Error"
            ]
          },
          "transactions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "signature": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "signature"
              ]
            },
            "nullable": true
          },
          "actions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "signature": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "signature"
              ]
            },
            "nullable": true
          }
        },
        "required": [
          "status"
        ]
      },
      "PlayerGetQuoteResponse": {
        "type": "object",
        "properties": {
          "tokenIn": {
            "type": "string"
          },
          "tokenOut": {
            "type": "string"
          },
          "amountIn": {
            "type": "string"
          },
          "amountOut": {
            "type": "string"
          }
        },
        "required": [
          "tokenIn",
          "tokenOut",
          "amountIn",
          "amountOut"
        ]
      },
      "PlayerConvertTokenRequestInput": {
        "type": "object",
        "properties": {
          "tokenIn": {
            "type": "string"
          },
          "tokenOut": {
            "type": "string"
          },
          "amountIn": {
            "type": "string"
          },
          "amountOut": {
            "type": "string"
          },
          "receiverEntityId": {
            "type": "string"
          },
          "receiverWalletAddress": {
            "type": "string"
          },
          "optimistic": {
            "default": false,
            "type": "boolean"
          },
          "sponsor": {
            "default": true,
            "type": "boolean"
          },
          "policyId": {
            "default": null,
            "type": "string",
            "format": "cuid",
            "nullable": true
          },
          "chainId": {
            "default": 13337,
            "type": "integer",
            "format": "int64"
          },
          "operationProcessing": {
            "default": "Execute",
            "type": "string",
            "enum": [
              "SignOnly",
              "Execute"
            ],
            "description": "Operation processing type. If Execute is used, Operation will be executed automatically right after User signs it. If you prefer to have more control, use SignOnly then Process it using ProcessOperation."
          },
          "authProvider": {
            "default": "Any",
            "type": "string",
            "enum": [
              "Any",
              "Google",
              "Discord",
              "Apple"
            ],
            "nullable": true,
            "description": "Auth Provider for the user to use. If it's Any, user will be able to choose his preferred login method. Useful when you want to present social login choice in your UI."
          }
        },
        "required": [
          "tokenIn",
          "tokenOut",
          "amountIn",
          "amountOut"
        ]
      },
      "PlayerWrappingTokenInput": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "string"
          },
          "optimistic": {
            "default": false,
            "type": "boolean"
          },
          "sponsor": {
            "default": true,
            "type": "boolean"
          },
          "policyId": {
            "default": null,
            "type": "string",
            "format": "cuid",
            "nullable": true
          },
          "chainId": {
            "default": 13337,
            "type": "integer",
            "format": "int64"
          },
          "operationProcessing": {
            "default": "Execute",
            "type": "string",
            "enum": [
              "SignOnly",
              "Execute"
            ],
            "description": "Operation processing type. If Execute is used, Operation will be executed automatically right after User signs it. If you prefer to have more control, use SignOnly then Process it using ProcessOperation."
          },
          "authProvider": {
            "default": "Any",
            "type": "string",
            "enum": [
              "Any",
              "Google",
              "Discord",
              "Apple"
            ],
            "nullable": true,
            "description": "Auth Provider for the user to use. If it's Any, user will be able to choose his preferred login method. Useful when you want to present social login choice in your UI."
          }
        },
        "required": [
          "amount"
        ]
      },
      "PlayerUnwrappingTokenInput": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "string"
          },
          "optimistic": {
            "default": false,
            "type": "boolean"
          },
          "sponsor": {
            "default": true,
            "type": "boolean"
          },
          "policyId": {
            "default": null,
            "type": "string",
            "format": "cuid",
            "nullable": true
          },
          "chainId": {
            "default": 13337,
            "type": "integer",
            "format": "int64"
          },
          "operationProcessing": {
            "default": "Execute",
            "type": "string",
            "enum": [
              "SignOnly",
              "Execute"
            ],
            "description": "Operation processing type. If Execute is used, Operation will be executed automatically right after User signs it. If you prefer to have more control, use SignOnly then Process it using ProcessOperation."
          },
          "authProvider": {
            "default": "Any",
            "type": "string",
            "enum": [
              "Any",
              "Google",
              "Discord",
              "Apple"
            ],
            "nullable": true,
            "description": "Auth Provider for the user to use. If it's Any, user will be able to choose his preferred login method. Useful when you want to present social login choice in your UI."
          }
        },
        "required": [
          "amount"
        ]
      },
      "PlayerGenerateSessionUrlRequestInput": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          },
          "entityId": {
            "type": "string",
            "minLength": 3,
            "maxLength": 250,
            "nullable": true
          },
          "suggestedExpiry": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "authProvider": {
            "default": "Any",
            "type": "string",
            "enum": [
              "Any",
              "Google",
              "Discord",
              "Apple"
            ],
            "nullable": true,
            "description": "Auth Provider for the user to use. If it's Any, user will be able to choose his preferred login method. Useful when you want to present social login choice in your UI."
          },
          "contracts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "description": "List of contract addresses to be used in the session"
          },
          "chainId": {
            "default": 13337,
            "type": "integer",
            "format": "int64"
          }
        },
        "required": [
          "address"
        ]
      },
      "PlayerGenerateSessionRequestResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "Pending",
              "Accepted",
              "Error"
            ]
          },
          "authProvider": {
            "type": "string",
            "enum": [
              "Any",
              "Google",
              "Discord",
              "Apple"
            ]
          },
          "id": {
            "type": "string",
            "format": "cuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "entityId": {
            "type": "string",
            "nullable": true
          },
          "gameId": {
            "type": "string"
          },
          "chainId": {
            "type": "integer",
            "format": "int64"
          },
          "openfortId": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string"
          },
          "contracts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "url": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "status",
          "authProvider",
          "id",
          "createdAt",
          "updatedAt",
          "entityId",
          "gameId",
          "chainId",
          "openfortId",
          "address",
          "contracts",
          "url"
        ]
      },
      "PlayerRevokeSessionRequestInput": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          },
          "sponsor": {
            "default": true,
            "type": "boolean"
          },
          "policyId": {
            "default": null,
            "type": "string",
            "format": "cuid",
            "nullable": true
          },
          "chainId": {
            "default": 13337,
            "type": "integer",
            "format": "int64"
          },
          "operationProcessing": {
            "default": "Execute",
            "type": "string",
            "enum": [
              "SignOnly",
              "Execute"
            ],
            "description": "Operation processing type. If Execute is used, Operation will be executed automatically right after User signs it. If you prefer to have more control, use SignOnly then Process it using ProcessOperation."
          },
          "authProvider": {
            "default": "Any",
            "type": "string",
            "enum": [
              "Any",
              "Google",
              "Discord",
              "Apple"
            ],
            "nullable": true,
            "description": "Auth Provider for the user to use. If it's Any, user will be able to choose his preferred login method. Useful when you want to present social login choice in your UI."
          }
        },
        "required": [
          "address"
        ]
      },
      "PlayerGetSessionRequestResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "Pending",
              "Accepted",
              "Error"
            ]
          },
          "authProvider": {
            "type": "string",
            "enum": [
              "Any",
              "Google",
              "Discord",
              "Apple"
            ]
          },
          "id": {
            "type": "string",
            "format": "cuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "entityId": {
            "type": "string",
            "nullable": true
          },
          "gameId": {
            "type": "string"
          },
          "chainId": {
            "type": "integer",
            "format": "int64"
          },
          "openfortId": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string"
          },
          "contracts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "status",
          "authProvider",
          "id",
          "createdAt",
          "updatedAt",
          "entityId",
          "gameId",
          "chainId",
          "openfortId",
          "address",
          "contracts"
        ]
      },
      "PlayerGetActiveSessionsResponse": {
        "type": "object",
        "properties": {
          "sessions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "isActive": {
                  "type": "boolean"
                },
                "startTime": {
                  "type": "string",
                  "format": "date-time"
                },
                "endTime": {
                  "type": "string",
                  "format": "date-time"
                },
                "sessionAddress": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "isActive",
                "startTime",
                "endTime",
                "sessionAddress"
              ]
            }
          }
        },
        "required": [
          "sessions"
        ]
      },
      "PlayerGetActiveSessionResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          },
          "sessionAddress": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "isActive",
          "startTime",
          "endTime",
          "sessionAddress"
        ]
      },
      "PlayerGetActiveSessionResponseV2": {
        "type": "object",
        "properties": {
          "session": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "isActive": {
                "type": "boolean"
              },
              "startTime": {
                "type": "string",
                "format": "date-time"
              },
              "endTime": {
                "type": "string",
                "format": "date-time"
              },
              "sessionAddress": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "isActive",
              "startTime",
              "endTime",
              "sessionAddress"
            ],
            "nullable": true
          }
        }
      },
      "PlayerCreateConnectionRequestInput": {
        "type": "object",
        "properties": {
          "entityId": {
            "type": "string",
            "minLength": 3,
            "maxLength": 250,
            "nullable": true
          },
          "authProvider": {
            "default": "Any",
            "type": "string",
            "enum": [
              "Any",
              "Google",
              "Discord",
              "Apple"
            ],
            "nullable": true,
            "description": "Auth Provider for the user to use. If it's Any, user will be able to choose his preferred login method. Useful when you want to present social login choice in your UI."
          }
        }
      },
      "PlayerCreateConnectionRequestResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "Pending",
              "Connected",
              "Error"
            ]
          },
          "authProvider": {
            "type": "string",
            "enum": [
              "Any",
              "Google",
              "Discord",
              "Apple"
            ]
          },
          "id": {
            "type": "string",
            "format": "cuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "entityId": {
            "type": "string",
            "nullable": true
          },
          "gameId": {
            "type": "string"
          },
          "url": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "status",
          "authProvider",
          "id",
          "createdAt",
          "updatedAt",
          "entityId",
          "gameId",
          "url"
        ]
      },
      "PlayerGetConnectionRequestResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "Pending",
              "Connected",
              "Error"
            ]
          },
          "authProvider": {
            "type": "string",
            "enum": [
              "Any",
              "Google",
              "Discord",
              "Apple"
            ]
          },
          "id": {
            "type": "string",
            "format": "cuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "entityId": {
            "type": "string",
            "nullable": true
          },
          "gameId": {
            "type": "string"
          }
        },
        "required": [
          "status",
          "authProvider",
          "id",
          "createdAt",
          "updatedAt",
          "entityId",
          "gameId"
        ]
      },
      "PlayerCommonStatsRequestInput": {
        "type": "object",
        "properties": {
          "attributes": {
            "default": null,
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "key": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              },
              "required": [
                "key",
                "value"
              ]
            },
            "nullable": true
          },
          "chainId": {
            "default": 13337,
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PlayerCommonStatsResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "object",
            "properties": {
              "tokens": {
                "type": "number"
              },
              "listed": {
                "type": "number"
              }
            },
            "required": [
              "tokens",
              "listed"
            ]
          }
        },
        "required": [
          "count"
        ]
      },
      "PlayerCommonUserActivityRequestInput": {
        "type": "object",
        "properties": {
          "limit": {
            "default": 20,
            "type": "number",
            "minimum": 1,
            "maximum": 20
          },
          "types": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "ask",
                "ask_cancel",
                "bid",
                "bid_cancel",
                "sale",
                "mint",
                "transfer"
              ]
            },
            "nullable": true
          },
          "chainId": {
            "default": 13337,
            "type": "integer",
            "format": "int64"
          },
          "continuation": {
            "default": null,
            "type": "string",
            "nullable": true
          }
        }
      },
      "PlayerCommonActivityResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "createdAt": {
                  "type": "string",
                  "nullable": true
                },
                "contract": {
                  "type": "object",
                  "properties": {
                    "address": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                },
                "transaction": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "number",
                      "nullable": true
                    },
                    "from": {
                      "type": "string",
                      "nullable": true
                    },
                    "to": {
                      "type": "string",
                      "nullable": true
                    },
                    "hash": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                },
                "asset": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                },
                "order": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "nullable": true
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "ask",
                    "ask_cancel",
                    "bid",
                    "bid_cancel",
                    "sale",
                    "mint",
                    "transfer"
                  ],
                  "nullable": true
                }
              },
              "required": [
                "contract",
                "transaction",
                "asset"
              ]
            }
          },
          "continuation": {
            "default": null,
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "data"
        ]
      },
      "PlayerCommonContractActivityRequestInput": {
        "type": "object",
        "properties": {
          "limit": {
            "default": 20,
            "type": "number",
            "minimum": 1,
            "maximum": 50
          },
          "types": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "ask",
                "ask_cancel",
                "bid",
                "bid_cancel",
                "sale",
                "mint",
                "transfer"
              ]
            },
            "nullable": true
          },
          "chainId": {
            "default": 13337,
            "type": "integer",
            "format": "int64"
          },
          "continuation": {
            "default": null,
            "type": "string",
            "nullable": true
          }
        }
      },
      "PlayerCommonAssetActivityRequestInput": {
        "type": "object",
        "properties": {
          "limit": {
            "default": 20,
            "type": "number",
            "minimum": 1,
            "maximum": 20
          },
          "types": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "ask",
                "ask_cancel",
                "bid",
                "bid_cancel",
                "sale",
                "mint",
                "transfer"
              ]
            },
            "nullable": true
          },
          "chainId": {
            "default": 13337,
            "type": "integer",
            "format": "int64"
          },
          "continuation": {
            "default": null,
            "type": "string",
            "nullable": true
          }
        }
      },
      "PlayerCreateOnrampRequestInput": {
        "type": "object",
        "properties": {
          "platform": {
            "default": "transak",
            "type": "string",
            "enum": [
              "thirdweb",
              "transak"
            ]
          },
          "token": {
            "default": "BEAM",
            "type": "string",
            "enum": [
              "BEAM",
              "FP"
            ]
          },
          "tokenAmount": {
            "type": "string"
          },
          "fiatAmount": {
            "type": "string"
          },
          "paymentCurrency": {
            "default": "USD",
            "type": "string"
          },
          "canChangeAmount": {
            "default": false,
            "type": "boolean"
          },
          "chainId": {
            "default": 13337,
            "type": "integer",
            "format": "int64"
          },
          "authProvider": {
            "default": "Any",
            "type": "string",
            "enum": [
              "Any",
              "Google",
              "Discord",
              "Apple"
            ],
            "nullable": true,
            "description": "Auth Provider for the user to use. If it's Any, user will be able to choose his preferred login method. Useful when you want to present social login choice in your UI."
          }
        }
      },
      "PlayerReadContractRequest": {
        "type": "object",
        "properties": {
          "chainId": {
            "default": 13337,
            "type": "integer",
            "format": "int64"
          },
          "functionName": {
            "type": "string"
          },
          "functionArgs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "functionName",
          "functionArgs"
        ]
      },
      "PlayerReadContractResonse": {
        "type": "object",
        "properties": {
          "result": {
            "nullable": true
          }
        }
      }
    }
  }
}