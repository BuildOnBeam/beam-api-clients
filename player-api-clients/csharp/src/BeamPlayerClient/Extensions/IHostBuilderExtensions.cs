/*
 * Player API
 *
 * The Player API is a service to integrate your game with Beam
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Hosting;
using BeamPlayerClient.Client;

namespace BeamPlayerClient.Extensions
{
    /// <summary>
    /// Extension methods for IHostBuilder
    /// </summary>
    public static class IHostBuilderExtensions
    {
        /// <summary>
        /// Add the api to your host builder.
        /// </summary>
        /// <param name="builder"></param>
        /// <param name="options"></param>
        [Obsolete("Use ConfigureBeamPlayerApi")]
        public static IHostBuilder ConfigureApi(this IHostBuilder builder, Action<HostBuilderContext, IServiceCollection, PlayerHostConfiguration> options)
        {
            builder.ConfigureServices((context, services) =>
            {
                PlayerHostConfiguration config = new PlayerHostConfiguration(services);

                options(context, services, config);

                IServiceCollectionExtensions.AddBeamPlayerApi(services, config);
            });

            return builder;
        }

        /// <summary>
        /// Add the api to your host builder.
        /// </summary>
        /// <param name="builder"></param>
        /// <param name="options"></param>
        public static IHostBuilder ConfigureBeamPlayerApi(this IHostBuilder builder, Action<HostBuilderContext, IServiceCollection, PlayerHostConfiguration> options)
        {
            builder.ConfigureServices((context, services) =>
            {
                PlayerHostConfiguration config = new PlayerHostConfiguration(services);

                options(context, services, config);

                IServiceCollectionExtensions.AddBeamPlayerApi(services, config);
            });

            return builder;
        }
    }
}