/*
 * Beam self custody API
 *
 * The Beam self custody API is a service to integrate your game with Beam
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.Net.Http;
using Microsoft.Extensions.DependencyInjection;
using BeamPlayerClient.Api;
using BeamPlayerClient.Model;

namespace BeamPlayerClient.Client
{
    /// <summary>
    /// Provides hosting configuration for BeamPlayerClient
    /// </summary>
    public class HostConfiguration
    {
        private readonly IServiceCollection _services;
        private readonly JsonSerializerOptions _jsonOptions = new JsonSerializerOptions();

        internal bool HttpClientsAdded { get; private set; }

        /// <summary>
        /// Instantiates the class 
        /// </summary>
        /// <param name="services"></param>
        public HostConfiguration(IServiceCollection services)
        {
            _services = services;
            _jsonOptions.Converters.Add(new JsonStringEnumConverter());
            _jsonOptions.Converters.Add(new DateTimeJsonConverter());
            _jsonOptions.Converters.Add(new DateTimeNullableJsonConverter());
            _jsonOptions.Converters.Add(new AcceptAssetOfferRequestInputJsonConverter());
            _jsonOptions.Converters.Add(new BuyAssetRequestInputJsonConverter());
            _jsonOptions.Converters.Add(new CancelAssetListingRequestInputJsonConverter());
            _jsonOptions.Converters.Add(new CancelAssetOfferRequestInputJsonConverter());
            _jsonOptions.Converters.Add(new Check200ResponseJsonConverter());
            _jsonOptions.Converters.Add(new Check200ResponseInfoValueJsonConverter());
            _jsonOptions.Converters.Add(new Check503ResponseJsonConverter());
            _jsonOptions.Converters.Add(new CommonOperationResponseJsonConverter());
            _jsonOptions.Converters.Add(new CommonOperationResponseTransactionsInnerJsonConverter());
            _jsonOptions.Converters.Add(new CommonOperationResponseTransactionsInnerDataJsonConverter());
            _jsonOptions.Converters.Add(new ConfirmOperationRequestJsonConverter());
            _jsonOptions.Converters.Add(new ConfirmOperationRequestTransactionsInnerJsonConverter());
            _jsonOptions.Converters.Add(new ConvertTokenRequestInputJsonConverter());
            _jsonOptions.Converters.Add(new CreateAssetOfferRequestInputJsonConverter());
            _jsonOptions.Converters.Add(new CreateOperationRequestInputJsonConverter());
            _jsonOptions.Converters.Add(new CreateTransactionRequestInputJsonConverter());
            _jsonOptions.Converters.Add(new CreateTransactionRequestInputInteractionsInnerJsonConverter());
            _jsonOptions.Converters.Add(new GenerateSessionRequestResponseJsonConverter());
            _jsonOptions.Converters.Add(new GenerateSessionUrlRequestInputJsonConverter());
            _jsonOptions.Converters.Add(new GetActiveSessionResponseJsonConverter());
            _jsonOptions.Converters.Add(new GetAllUsersResponseJsonConverter());
            _jsonOptions.Converters.Add(new GetAllUsersResponseDataInnerJsonConverter());
            _jsonOptions.Converters.Add(new GetAllUsersResponseDataInnerWalletsInnerJsonConverter());
            _jsonOptions.Converters.Add(new GetAssetListingsResponseJsonConverter());
            _jsonOptions.Converters.Add(new GetAssetListingsResponseDataInnerJsonConverter());
            _jsonOptions.Converters.Add(new GetAssetListingsResponseDataInnerPriceJsonConverter());
            _jsonOptions.Converters.Add(new GetAssetListingsResponseDataInnerPriceAmountJsonConverter());
            _jsonOptions.Converters.Add(new GetAssetListingsResponseDataInnerPriceCurrencyJsonConverter());
            _jsonOptions.Converters.Add(new GetAssetResponseV3JsonConverter());
            _jsonOptions.Converters.Add(new GetAssetResponseV3OwnersInnerJsonConverter());
            _jsonOptions.Converters.Add(new GetAssetsForContractBodyInputV3JsonConverter());
            _jsonOptions.Converters.Add(new GetAssetsForContractBodyInputV3AttributesInnerJsonConverter());
            _jsonOptions.Converters.Add(new GetAssetsForContractResponseV3JsonConverter());
            _jsonOptions.Converters.Add(new GetAssetsForContractResponseV3DataInnerJsonConverter());
            _jsonOptions.Converters.Add(new GetAssetsForProfileBodyInputV3JsonConverter());
            _jsonOptions.Converters.Add(new GetAssetsForProfileResponseV3JsonConverter());
            _jsonOptions.Converters.Add(new GetAssetsForProfileResponseV3DataInnerJsonConverter());
            _jsonOptions.Converters.Add(new GetAssetsForProfileResponseV3DataInnerAttributesInnerJsonConverter());
            _jsonOptions.Converters.Add(new GetChainCurrenciesResponseJsonConverter());
            _jsonOptions.Converters.Add(new GetChainCurrenciesResponseDataInnerJsonConverter());
            _jsonOptions.Converters.Add(new GetListedAssetsBodyInputJsonConverter());
            _jsonOptions.Converters.Add(new GetProfileCurrenciesResponseV3JsonConverter());
            _jsonOptions.Converters.Add(new GetProfileCurrenciesResponseV3DataInnerJsonConverter());
            _jsonOptions.Converters.Add(new GetProfileNativeCurrencyResponseV3JsonConverter());
            _jsonOptions.Converters.Add(new GetProfileNativeCurrencyResponseV3NativeTokenBalanceJsonConverter());
            _jsonOptions.Converters.Add(new GetQuoteResponseJsonConverter());
            _jsonOptions.Converters.Add(new GetSessionRequestResponseJsonConverter());
            _jsonOptions.Converters.Add(new GetTransactionResponseJsonConverter());
            _jsonOptions.Converters.Add(new GetTransactionResponsePolicyJsonConverter());
            _jsonOptions.Converters.Add(new GetTransactionResponseProfileJsonConverter());
            _jsonOptions.Converters.Add(new GetTransactionResponseProfileWalletJsonConverter());
            _jsonOptions.Converters.Add(new GetTransactionsResponseJsonConverter());
            _jsonOptions.Converters.Add(new GetTransactionsResponseDataInnerJsonConverter());
            _jsonOptions.Converters.Add(new GetTransactionsResponseDataInnerIntentJsonConverter());
            _jsonOptions.Converters.Add(new GetTransactionsResponseDataInnerIntentInteractionsInnerJsonConverter());
            _jsonOptions.Converters.Add(new GetTransactionsResponseDataInnerTransactionJsonConverter());
            _jsonOptions.Converters.Add(new GetTransactionsResponseDataInnerTransactionLogsInnerJsonConverter());
            _jsonOptions.Converters.Add(new GetTransactionsResponsePaginationJsonConverter());
            _jsonOptions.Converters.Add(new GetUserResponseJsonConverter());
            _jsonOptions.Converters.Add(new SellAssetRequestInputJsonConverter());
            _jsonOptions.Converters.Add(new TransferAssetRequestInputV3JsonConverter());
            _jsonOptions.Converters.Add(new TransferAssetRequestInputV3AssetsInnerJsonConverter());
            _jsonOptions.Converters.Add(new TransferNativeTokenRequestInputV3JsonConverter());
            _jsonOptions.Converters.Add(new TransferTokenRequestInputV3JsonConverter());
            JsonSerializerOptionsProvider jsonSerializerOptionsProvider = new(_jsonOptions);
            _services.AddSingleton(jsonSerializerOptionsProvider);
            _services.AddSingleton<IApiFactory, ApiFactory>();
            _services.AddSingleton<AssetsApiEvents>();
            _services.AddTransient<IAssetsApi, AssetsApi>();
            _services.AddSingleton<ExchangeApiEvents>();
            _services.AddTransient<IExchangeApi, ExchangeApi>();
            _services.AddSingleton<HealthApiEvents>();
            _services.AddTransient<IHealthApi, HealthApi>();
            _services.AddSingleton<MarketplaceApiEvents>();
            _services.AddTransient<IMarketplaceApi, MarketplaceApi>();
            _services.AddSingleton<OperationApiEvents>();
            _services.AddTransient<IOperationApi, OperationApi>();
            _services.AddSingleton<SessionsApiEvents>();
            _services.AddTransient<ISessionsApi, SessionsApi>();
            _services.AddSingleton<TransactionsApiEvents>();
            _services.AddTransient<ITransactionsApi, TransactionsApi>();
            _services.AddSingleton<UsersApiEvents>();
            _services.AddTransient<IUsersApi, UsersApi>();
        }

        /// <summary>
        /// Configures the HttpClients.
        /// </summary>
        /// <param name="client"></param>
        /// <param name="builder"></param>
        /// <returns></returns>
        public HostConfiguration AddBeamPlayerApiHttpClients
        (
            Action<HttpClient>? client = null, Action<IHttpClientBuilder>? builder = null)
        {
            if (client == null)
                client = c => c.BaseAddress = new Uri(ClientUtils.BASE_ADDRESS);

            List<IHttpClientBuilder> builders = new List<IHttpClientBuilder>();

            builders.Add(_services.AddHttpClient<IAssetsApi, AssetsApi>(client));
            builders.Add(_services.AddHttpClient<IExchangeApi, ExchangeApi>(client));
            builders.Add(_services.AddHttpClient<IHealthApi, HealthApi>(client));
            builders.Add(_services.AddHttpClient<IMarketplaceApi, MarketplaceApi>(client));
            builders.Add(_services.AddHttpClient<IOperationApi, OperationApi>(client));
            builders.Add(_services.AddHttpClient<ISessionsApi, SessionsApi>(client));
            builders.Add(_services.AddHttpClient<ITransactionsApi, TransactionsApi>(client));
            builders.Add(_services.AddHttpClient<IUsersApi, UsersApi>(client));
            
            if (builder != null)
                foreach (IHttpClientBuilder instance in builders)
                    builder(instance);

            HttpClientsAdded = true;

            return this;
        }

        /// <summary>
        /// Configures the JsonSerializerSettings
        /// </summary>
        /// <param name="options"></param>
        /// <returns></returns>
        public HostConfiguration ConfigureJsonOptions(Action<JsonSerializerOptions> options)
        {
            options(_jsonOptions);

            return this;
        }

        /// <summary>
        /// Adds tokens to your IServiceCollection
        /// </summary>
        /// <typeparam name="TTokenBase"></typeparam>
        /// <param name="token"></param>
        /// <returns></returns>
        public HostConfiguration AddTokens<TTokenBase>(TTokenBase token) where TTokenBase : TokenBase
        {
            return AddTokens(new TTokenBase[]{ token });
        }

        /// <summary>
        /// Adds tokens to your IServiceCollection
        /// </summary>
        /// <typeparam name="TTokenBase"></typeparam>
        /// <param name="tokens"></param>
        /// <returns></returns>
        public HostConfiguration AddTokens<TTokenBase>(IEnumerable<TTokenBase> tokens) where TTokenBase : TokenBase
        {
            TokenContainer<TTokenBase> container = new TokenContainer<TTokenBase>(tokens);
            _services.AddSingleton(services => container);

            return this;
        }

        /// <summary>
        /// Adds a token provider to your IServiceCollection
        /// </summary>
        /// <typeparam name="TTokenProvider"></typeparam>
        /// <typeparam name="TTokenBase"></typeparam>
        /// <returns></returns>
        public HostConfiguration UseProvider<TTokenProvider, TTokenBase>() 
            where TTokenProvider : TokenProvider<TTokenBase>
            where TTokenBase : TokenBase
        {
            _services.AddSingleton<TTokenProvider>();
            _services.AddSingleton<TokenProvider<TTokenBase>>(services => services.GetRequiredService<TTokenProvider>());

            return this;
        }
    }
}
