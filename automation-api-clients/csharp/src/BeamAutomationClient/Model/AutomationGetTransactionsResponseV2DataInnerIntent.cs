// <auto-generated>
/*
 * Automation API
 *
 * The Automation API is a service to integrate your game with Beam
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.ComponentModel.DataAnnotations;
using OpenAPIClientUtils = BeamAutomationClient.Client.ClientUtils;
using BeamAutomationClient.Client;

namespace BeamAutomationClient.Model
{
    /// <summary>
    /// AutomationGetTransactionsResponseV2DataInnerIntent
    /// </summary>
    public partial class AutomationGetTransactionsResponseV2DataInnerIntent : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AutomationGetTransactionsResponseV2DataInnerIntent" /> class.
        /// </summary>
        /// <param name="hash">hash</param>
        /// <param name="interactions">interactions</param>
        [JsonConstructor]
        public AutomationGetTransactionsResponseV2DataInnerIntent(Option<string?> hash = default, Option<List<AutomationGetTransactionsResponseV2DataInnerIntentInteractionsInner>?> interactions = default)
        {
            HashOption = hash;
            InteractionsOption = interactions;
            OnCreated();
        }

        partial void OnCreated();

        /// <summary>
        /// Used to track the state of Hash
        /// </summary>
        [JsonIgnore]
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> HashOption { get; private set; }

        /// <summary>
        /// Gets or Sets Hash
        /// </summary>
        [JsonPropertyName("hash")]
        public string? Hash { get { return this. HashOption; } set { this.HashOption = new(value); } }

        /// <summary>
        /// Used to track the state of Interactions
        /// </summary>
        [JsonIgnore]
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public Option<List<AutomationGetTransactionsResponseV2DataInnerIntentInteractionsInner>?> InteractionsOption { get; private set; }

        /// <summary>
        /// Gets or Sets Interactions
        /// </summary>
        [JsonPropertyName("interactions")]
        public List<AutomationGetTransactionsResponseV2DataInnerIntentInteractionsInner>? Interactions { get { return this. InteractionsOption; } set { this.InteractionsOption = new(value); } }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AutomationGetTransactionsResponseV2DataInnerIntent {\n");
            sb.Append("  Hash: ").Append(Hash).Append("\n");
            sb.Append("  Interactions: ").Append(Interactions).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="AutomationGetTransactionsResponseV2DataInnerIntent" />
    /// </summary>
    public class AutomationGetTransactionsResponseV2DataInnerIntentJsonConverter : JsonConverter<AutomationGetTransactionsResponseV2DataInnerIntent>
    {
        /// <summary>
        /// Deserializes json to <see cref="AutomationGetTransactionsResponseV2DataInnerIntent" />
        /// </summary>
        /// <param name="utf8JsonReader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <returns></returns>
        /// <exception cref="JsonException"></exception>
        public override AutomationGetTransactionsResponseV2DataInnerIntent Read(ref Utf8JsonReader utf8JsonReader, Type typeToConvert, JsonSerializerOptions jsonSerializerOptions)
        {
            int currentDepth = utf8JsonReader.CurrentDepth;

            if (utf8JsonReader.TokenType != JsonTokenType.StartObject && utf8JsonReader.TokenType != JsonTokenType.StartArray)
                throw new JsonException();

            JsonTokenType startingTokenType = utf8JsonReader.TokenType;

            Option<string?> hash = default;
            Option<List<AutomationGetTransactionsResponseV2DataInnerIntentInteractionsInner>?> interactions = default;

            while (utf8JsonReader.Read())
            {
                if (startingTokenType == JsonTokenType.StartObject && utf8JsonReader.TokenType == JsonTokenType.EndObject && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (startingTokenType == JsonTokenType.StartArray && utf8JsonReader.TokenType == JsonTokenType.EndArray && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (utf8JsonReader.TokenType == JsonTokenType.PropertyName && currentDepth == utf8JsonReader.CurrentDepth - 1)
                {
                    string? localVarJsonPropertyName = utf8JsonReader.GetString();
                    utf8JsonReader.Read();

                    switch (localVarJsonPropertyName)
                    {
                        case "hash":
                            hash = new Option<string?>(utf8JsonReader.GetString());
                            break;
                        case "interactions":
                            if (utf8JsonReader.TokenType != JsonTokenType.Null)
                                interactions = new Option<List<AutomationGetTransactionsResponseV2DataInnerIntentInteractionsInner>?>(JsonSerializer.Deserialize<List<AutomationGetTransactionsResponseV2DataInnerIntentInteractionsInner>>(ref utf8JsonReader, jsonSerializerOptions));
                            break;
                        default:
                            break;
                    }
                }
            }

            return new AutomationGetTransactionsResponseV2DataInnerIntent(hash, interactions);
        }

        /// <summary>
        /// Serializes a <see cref="AutomationGetTransactionsResponseV2DataInnerIntent" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="automationGetTransactionsResponseV2DataInnerIntent"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public override void Write(Utf8JsonWriter writer, AutomationGetTransactionsResponseV2DataInnerIntent automationGetTransactionsResponseV2DataInnerIntent, JsonSerializerOptions jsonSerializerOptions)
        {
            writer.WriteStartObject();

            WriteProperties(ref writer, automationGetTransactionsResponseV2DataInnerIntent, jsonSerializerOptions);
            writer.WriteEndObject();
        }

        /// <summary>
        /// Serializes the properties of <see cref="AutomationGetTransactionsResponseV2DataInnerIntent" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="automationGetTransactionsResponseV2DataInnerIntent"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public void WriteProperties(ref Utf8JsonWriter writer, AutomationGetTransactionsResponseV2DataInnerIntent automationGetTransactionsResponseV2DataInnerIntent, JsonSerializerOptions jsonSerializerOptions)
        {
            if (automationGetTransactionsResponseV2DataInnerIntent.HashOption.IsSet)
                if (automationGetTransactionsResponseV2DataInnerIntent.HashOption.Value != null)
                    writer.WriteString("hash", automationGetTransactionsResponseV2DataInnerIntent.Hash);
                else
                    writer.WriteNull("hash");

            if (automationGetTransactionsResponseV2DataInnerIntent.InteractionsOption.IsSet)
                if (automationGetTransactionsResponseV2DataInnerIntent.InteractionsOption.Value != null)
                {
                    writer.WritePropertyName("interactions");
                    JsonSerializer.Serialize(writer, automationGetTransactionsResponseV2DataInnerIntent.Interactions, jsonSerializerOptions);
                }
                else
                    writer.WriteNull("interactions");
        }
    }
}