{
  "openapi": "3.0.0",
  "paths": {
    "/v1/health/services": {
      "get": {
        "operationId": "check",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The Health Check is successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ok"
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": {},
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "The Health Check is not successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": {
                        "redis": {
                          "status": "down",
                          "message": "Could not connect"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        },
                        "redis": {
                          "status": "down",
                          "message": "Could not connect"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Health"
        ]
      }
    },
    "/v2/assets/profiles/{entityId}": {
      "post": {
        "operationId": "getProfileAssetsForGamePostV2",
        "parameters": [
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutomationGetAssetsForProfileBodyInputV2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationGetAssetsForProfileResponseV2"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Get all the assets of a profile (NFT assets, e.g. ERC721 / ERC1155)",
        "tags": [
          "Assets V2"
        ]
      }
    },
    "/v2/assets/profiles/{entityId}/currencies": {
      "get": {
        "operationId": "getProfileCurrenciesV2",
        "parameters": [
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "chainId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationGetProfileCurrenciesResponseV2"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Get all the currencies owned by an account (ERC20)",
        "tags": [
          "Assets V2"
        ]
      }
    },
    "/v2/assets/profiles/{entityId}/native": {
      "get": {
        "operationId": "getProfileNativeCurrencyV2",
        "parameters": [
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "chainId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationGetProfileNativeCurrencyResponseV2"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Get the native token balance",
        "tags": [
          "Assets V2"
        ]
      }
    },
    "/v2/assets/profiles/{entityId}/transfer-asset": {
      "post": {
        "operationId": "TransferAssetV2",
        "parameters": [
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutomationTransferAssetRequestInputV2"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationTransactionResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Transfer an asset (NFT assets, ERC721 / ERC1155)",
        "tags": [
          "Assets V2"
        ]
      }
    },
    "/v2/assets/profiles/{entityId}/transfer-token": {
      "post": {
        "operationId": "TransferTokenV2",
        "parameters": [
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutomationTransferTokenRequestInputV2"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationTransactionResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Transfer a token (token assets, ERC20)",
        "tags": [
          "Assets V2"
        ]
      }
    },
    "/v2/assets/profiles/{entityId}/transfer-native": {
      "post": {
        "operationId": "TransferNativeTokenV2",
        "parameters": [
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutomationTransferNativeTokenRequestInputV2"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationTransactionResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Transfer the native token",
        "tags": [
          "Assets V2"
        ]
      }
    },
    "/v2/assets/{assetAddress}": {
      "post": {
        "operationId": "getContractAssetsPostV2",
        "parameters": [
          {
            "name": "assetAddress",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutomationGetAssetsForContractBodyInputV2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationGetAssetsForContractResponseV2"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Get all the assets of contract (NFT assets, e.g. ERC721 / ERC1155)",
        "tags": [
          "Assets V2"
        ]
      }
    },
    "/v2/assets/{assetAddress}/{assetId}": {
      "get": {
        "operationId": "getAssetV2",
        "parameters": [
          {
            "name": "chainId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "name": "assetAddress",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "assetId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entityId",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "owners",
            "required": false,
            "in": "query",
            "description": "If true, will return owners of the token",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationGetAssetResponseV2"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Get a single NFT (e.g. ERC721 / ERC1155)",
        "tags": [
          "Assets V2"
        ]
      }
    },
    "/v1/chain": {
      "get": {
        "operationId": "chain",
        "parameters": [
          {
            "name": "chainId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationGetChainResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "tags": [
          "Chain"
        ]
      }
    },
    "/v1/chain/estimate/profiles/{entityId}/transaction": {
      "post": {
        "operationId": "estimateProfileTransactionGas",
        "parameters": [
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutomationCreateTransactionRequestInputV2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationGetEstimateResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Estimate gas fee for a transaction on behalf of a profile",
        "tags": [
          "Chain"
        ]
      }
    },
    "/v1/contract/get-verification-status": {
      "post": {
        "operationId": "getVerificationStatus",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutomationGetVerificationStatusRequestInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Contract verification status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationGetVerificationStatusResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Get the verification status of a contract",
        "tags": [
          "Contract"
        ]
      }
    },
    "/v1/contract": {
      "get": {
        "operationId": "getGameContracts",
        "parameters": [
          {
            "name": "includeAbis",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "List of Contracts added to your Game",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationGameContractsResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Get a list of Contracts added to your Game",
        "tags": [
          "Contract"
        ]
      },
      "post": {
        "operationId": "addContractToGame",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutomationAddContractRequestInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The contract was successfully added to the game",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationAddContractResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Add a new contract to the game",
        "tags": [
          "Contract"
        ]
      }
    },
    "/v1/contract/{address}/{chainId}": {
      "delete": {
        "operationId": "removeContractFromGame",
        "parameters": [
          {
            "name": "chainId",
            "required": true,
            "in": "path",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "name": "address",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The contract was successfully deleted from the game",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationRemoveContractResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Delete a contract from a game",
        "tags": [
          "Contract"
        ]
      }
    },
    "/v1/exchange/quote/input": {
      "get": {
        "operationId": "getQuoteForInput",
        "parameters": [
          {
            "name": "tokenIn",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tokenOut",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "amountOut",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "chainId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationGetQuoteResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Returns the maximum necessary input amount for a token trade, given a desired output amount",
        "tags": [
          "Exchange"
        ]
      }
    },
    "/v1/exchange/quote/output": {
      "get": {
        "operationId": "getQuoteForOutput",
        "parameters": [
          {
            "name": "tokenIn",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tokenOut",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "amountIn",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "chainId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationGetQuoteResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Returns the minimum expected output amount for a token trade, given an input amount",
        "tags": [
          "Exchange"
        ]
      }
    },
    "/v1/exchange/profiles/{entityId}/convert/input": {
      "post": {
        "operationId": "convertInput",
        "parameters": [
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutomationConvertTokenRequestInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationTransactionResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Swap an exact amount of `tokenIn` for a minimum amount of `tokenOut`",
        "tags": [
          "Exchange"
        ]
      }
    },
    "/v1/exchange/profiles/{entityId}/convert/output": {
      "post": {
        "operationId": "convertToOutput",
        "parameters": [
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutomationConvertTokenRequestInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationTransactionResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Swap a maximum amount of `tokenIn` for an exact amount of `tokenOut`",
        "tags": [
          "Exchange"
        ]
      }
    },
    "/v1/exchange/profiles/{entityId}/native/wrap": {
      "post": {
        "operationId": "wrapNative",
        "parameters": [
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutomationWrappingTokenInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationTransactionResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Wrap an amount of native token to wrapped native token",
        "tags": [
          "Exchange"
        ]
      }
    },
    "/v1/exchange/profiles/{entityId}/native/unwrap": {
      "post": {
        "operationId": "unwrapNative",
        "parameters": [
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutomationUnwrappingTokenInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationTransactionResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Unwrap an amount of wrapped to native token",
        "tags": [
          "Exchange"
        ]
      }
    },
    "/v1/game": {
      "get": {
        "operationId": "getGame",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Game response (including contracts & policies)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationGetGameResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Get information about your game",
        "tags": [
          "Game"
        ]
      }
    },
    "/v1/game/regenerate-api-keys": {
      "post": {
        "operationId": "regenerateApiKeys",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Old keys were revoked and new ones were generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationRegenerateGameApiKeysResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Regenerate all your API keys through the provided regenerate key. Note that existing keys will be invalidated immediately",
        "tags": [
          "Game"
        ]
      }
    },
    "/v2/marketplace": {
      "post": {
        "operationId": "getListedAssetsPostV2",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutomationGetListedAssetsBodyInputV2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationGetAssetListingsResponseV2"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Get all listed assets for a game (NFT assets, e.g. ERC721 / ERC1155)",
        "tags": [
          "Marketplace V2"
        ]
      }
    },
    "/v2/marketplace/profiles/{entityId}": {
      "post": {
        "operationId": "getListedAssetsForProfilePostV2",
        "parameters": [
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutomationGetListedAssetsBodyInputV2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationGetAssetListingsResponseV2"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Get all the assets listed by a profile (NFT assets, e.g. ERC721 / ERC1155)",
        "tags": [
          "Marketplace V2"
        ]
      }
    },
    "/v2/marketplace/profiles/{entityId}/listing": {
      "post": {
        "operationId": "listAssetV2",
        "parameters": [
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutomationSellAssetRequestInputV2"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationSellAssetResponseV2"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "List an asset for sale",
        "tags": [
          "Marketplace V2"
        ]
      }
    },
    "/v2/marketplace/profiles/{entityId}/listing/{orderId}": {
      "post": {
        "operationId": "buyListedAssetV2",
        "parameters": [
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutomationBuyAssetRequestInputV2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationTransactionResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Buy listed asset",
        "tags": [
          "Marketplace V2"
        ]
      },
      "delete": {
        "operationId": "cancelListingV2",
        "parameters": [
          {
            "name": "chainId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutomationCancelAssetListingRequestInputV2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationTransactionResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Cancel asset listing",
        "tags": [
          "Marketplace V2"
        ]
      }
    },
    "/v2/marketplace/profiles/{entityId}/offers": {
      "post": {
        "operationId": "createAssetOfferV2",
        "parameters": [
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutomationCreateAssetOfferRequestInputV2"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationCreateOfferResponseV2"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Make an offer for an asset",
        "tags": [
          "Marketplace V2"
        ]
      },
      "get": {
        "operationId": "getPlayerOffersV2",
        "parameters": [
          {
            "name": "chainId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "continuation",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationGetAssetListingsResponseV2"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Get all offers that a profile created",
        "tags": [
          "Marketplace V2"
        ]
      }
    },
    "/v2/marketplace/profiles/{entityId}/offers/asset/{assetAddress}/{assetId}": {
      "get": {
        "operationId": "getPlayerAssetOffersV2",
        "parameters": [
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "assetAddress",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "assetId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "chainId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "name": "continuation",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationGetAssetListingsResponseV2"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Get all asset offers that player created",
        "tags": [
          "Marketplace V2"
        ]
      }
    },
    "/v2/marketplace/profiles/{entityId}/offers/{offerId}/accept": {
      "post": {
        "operationId": "acceptAssetOfferV2",
        "parameters": [
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offerId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutomationAcceptAssetOfferRequestInputV2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationTransactionResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Accept an offer for an asset",
        "tags": [
          "Marketplace V2"
        ]
      }
    },
    "/v2/marketplace/profiles/{entityId}/offers/{offerId}": {
      "delete": {
        "operationId": "cancelAssetOfferV2",
        "parameters": [
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offerId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutomationCancelAssetOfferRequestInputV2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationTransactionResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Cancel an offer for an asset",
        "tags": [
          "Marketplace V2"
        ]
      }
    },
    "/v2/marketplace/offers/asset/{assetAddress}/{assetId}": {
      "get": {
        "operationId": "getAssetOffersV2",
        "parameters": [
          {
            "name": "assetAddress",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "assetId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "chainId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "name": "continuation",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationGetAssetListingsResponseV2"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Get all offers for an asset",
        "tags": [
          "Marketplace V2"
        ]
      }
    },
    "/v2/marketplace/chain-currencies/{chainId}": {
      "get": {
        "operationId": "getChainCurrenciesV2",
        "parameters": [
          {
            "name": "chainId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationGetChainCurrenciesResponseV2"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Get available currencies for given chain",
        "tags": [
          "Marketplace V2"
        ]
      }
    },
    "/v2/marketplace/refresh/token": {
      "post": {
        "operationId": "refreshToken",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutomationRefreshTokenRequestBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Schedule a token refresh in the indexer",
        "tags": [
          "Marketplace V2"
        ]
      }
    },
    "/v2/marketplace/refresh/contract": {
      "post": {
        "operationId": "refreshContract",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutomationRefreshContractRequestBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Schedule a contract refresh in the indexer",
        "tags": [
          "Marketplace V2"
        ]
      }
    },
    "/v1/policies": {
      "post": {
        "operationId": "createPolicy",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutomationCommonAddPolicyRequestInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Policy was successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationCommonAddPolicyResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Add a new policy to sponsor web3 actions",
        "tags": [
          "Policy"
        ]
      },
      "get": {
        "operationId": "getPolicies",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationCommonGetPoliciesResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Get a list of policies",
        "tags": [
          "Policy"
        ]
      }
    },
    "/v1/policies/{policyId}": {
      "delete": {
        "operationId": "deletePolicy",
        "parameters": [
          {
            "name": "policyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Policy was successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationCommonRemovePolicyResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Removing a policy that sponsors web3 actions",
        "tags": [
          "Policy"
        ]
      }
    },
    "/v1/profiles": {
      "post": {
        "operationId": "createProfile",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutomationCreateProfileRequestInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationCreateProfileResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Creating a profile",
        "tags": [
          "Profiles"
        ]
      },
      "get": {
        "operationId": "getAllProfiles",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": "10",
              "type": "number"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "schema": {
              "default": "0",
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationGetAllProfilesResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Getting all profiles",
        "tags": [
          "Profiles"
        ]
      }
    },
    "/v1/profiles/{entityId}": {
      "get": {
        "operationId": "getProfile",
        "parameters": [
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationGetProfileResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Getting information on a profile",
        "tags": [
          "Profiles"
        ]
      },
      "patch": {
        "operationId": "updateProfile",
        "parameters": [
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutomationUpdateProfileRequestInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationUpdateProfileResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Update a profile",
        "tags": [
          "Profiles"
        ]
      }
    },
    "/v1/profiles/{entityId}/create-connection-request": {
      "post": {
        "deprecated": true,
        "operationId": "createConnectionRequest",
        "parameters": [
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutomationGenerateLinkCodeRequestInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Challenge to link up an anonymous profile to a user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationGenerateLinkCodeResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Generates a challenge which can be encoded in a QR code / app link for the user to take control of the profile",
        "tags": [
          "Profiles"
        ]
      }
    },
    "/v1/profiles/{entityId}/create-sign-in-request": {
      "post": {
        "deprecated": true,
        "operationId": "createSignInRequest",
        "parameters": [
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutomationGenerateSignInCodeRequestInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Challenge to sign in a player to the game",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationGenerateSignInCodeResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Generates a challenge which can be encoded in a QR code / app link for the user to sign in to the game",
        "tags": [
          "Profiles"
        ]
      }
    },
    "/v1/reporting/gas": {
      "get": {
        "operationId": "getTotalGameUsage",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationGetAllGasUsageResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Get the total gas usage for your game",
        "tags": [
          "Reporting"
        ]
      }
    },
    "/v1/reporting/gas/{chainId}": {
      "get": {
        "operationId": "getTotalGameUsageByChain",
        "parameters": [
          {
            "name": "chainId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationGetGasUsageResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Get total gas usage for single chain",
        "tags": [
          "Reporting"
        ]
      }
    },
    "/v1/reporting/gas/policies/{policyId}": {
      "get": {
        "operationId": "getPolicyUsage",
        "parameters": [
          {
            "name": "policyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationGetPolicyUsageResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Get gas usage from a single policy",
        "tags": [
          "Reporting"
        ]
      }
    },
    "/v2/transactions": {
      "get": {
        "operationId": "getTransactionsV2",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": "10",
              "type": "number"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "schema": {
              "default": "0",
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationGetTransactionsResponseV2"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Get a paginated list of transactions from your game",
        "tags": [
          "Transactions V2"
        ]
      }
    },
    "/v2/transactions/{transactionId}": {
      "get": {
        "operationId": "getTransactionV2",
        "parameters": [
          {
            "name": "transactionId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationTransactionResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Getting a transaction",
        "tags": [
          "Transactions V2"
        ]
      }
    },
    "/v2/transactions/profiles/{entityId}": {
      "get": {
        "operationId": "getProfileTransactionsV2",
        "parameters": [
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": "10",
              "type": "number"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "schema": {
              "default": "0",
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationGetTransactionsResponseV2"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Get a paginated list of transactions created on behalf of a profile",
        "tags": [
          "Transactions V2"
        ]
      },
      "post": {
        "operationId": "createProfileTransactionV2",
        "parameters": [
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutomationCreateTransactionRequestInputV2"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationTransactionResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Creating a new transaction on behalf of a profile",
        "tags": [
          "Transactions V2"
        ]
      }
    },
    "/v1/trading/trade": {
      "post": {
        "operationId": "tradeAssets",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutomationTradeTokensRequestInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationTransactionResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "tags": [
          "Trading"
        ]
      }
    },
    "/v1/automation/stats/{assetAddress}": {
      "post": {
        "operationId": "getContractStats",
        "parameters": [
          {
            "name": "assetAddress",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutomationCommonStatsRequestInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationCommonStatsResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Get contract stats",
        "tags": [
          "Stats"
        ]
      }
    },
    "/v1/automation/stats/{assetAddress}/assets/{assetId}": {
      "post": {
        "operationId": "getAssetStats",
        "parameters": [
          {
            "name": "assetAddress",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "assetId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutomationCommonStatsRequestInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationCommonStatsResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Get asset stats",
        "tags": [
          "Stats"
        ]
      }
    },
    "/v1/automation/activity/profiles/{entityId}": {
      "post": {
        "operationId": "getProfileActivity",
        "parameters": [
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutomationCommonUserActivityRequestInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationCommonActivityResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Get profile activity",
        "tags": [
          "Activity"
        ]
      }
    },
    "/v1/automation/activity/assets/{assetAddress}": {
      "post": {
        "operationId": "getContractActivity",
        "parameters": [
          {
            "name": "assetAddress",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutomationCommonContractActivityRequestInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationCommonActivityResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Get contract activity",
        "tags": [
          "Activity"
        ]
      }
    },
    "/v1/automation/activity/assets/{assetAddress}/asset/{assetId}": {
      "post": {
        "operationId": "getAssetActivity",
        "parameters": [
          {
            "name": "assetAddress",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "assetId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutomationCommonAssetActivityRequestInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationCommonActivityResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Get asset activity",
        "tags": [
          "Activity"
        ]
      }
    },
    "/v1/migration/migrate": {
      "post": {
        "operationId": "migrateProfileAssets",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutomationMigrateRequestInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationMigrateResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Migrate all the native token, ERC20 tokens and NFTs registered for your game from an Automation API profile to a Player API user",
        "tags": [
          "Migration"
        ]
      }
    },
    "/v1/contract/{contractAddress}/read": {
      "post": {
        "operationId": "readContract",
        "parameters": [
          {
            "name": "contractAddress",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutomationReadContractRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationReadContractResonse"
                }
              }
            }
          },
          "4XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationBeamErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "beam-api-key": []
          }
        ],
        "summary": "Calls a readable contract function",
        "tags": [
          "Contract"
        ]
      }
    }
  },
  "info": {
    "title": "Automation API",
    "description": "The Automation API is a service to integrate your game with Beam",
    "version": "1.0.0",
    "contact": {}
  },
  "tags": [
    {
      "name": "Game",
      "description": "Retrieve and manage information about your game in Beam"
    },
    {
      "name": "Profiles",
      "description": "Retrieve and manage profiles in Beam"
    },
    {
      "name": "Assets V2",
      "description": "Retrieve assets (ERC-20, ERC-721 and ERC1155) for profiles in your game"
    },
    {
      "name": "Transactions V2",
      "description": "Retrieve and create transactions on behalf of the profiles in your game"
    },
    {
      "name": "Exchange",
      "description": "Convert tokens using an exchange for profiles in your game"
    },
    {
      "name": "Marketplace V2",
      "description": "Manage listings and buy assets through the Beam marketplace"
    },
    {
      "name": "Trading",
      "description": "Trade assets and tokens between two profiles securely"
    },
    {
      "name": "Reporting",
      "description": "Get reports on the amount of gas expenditure in your game"
    },
    {
      "name": "Chain",
      "description": "Directly interact with the chain in order to estimate gas transactions"
    },
    {
      "name": "Policy",
      "description": "Create policies to charge users in in-game ERC20 tokens to fulfil transactions"
    },
    {
      "name": "Health",
      "description": "Allows you to validate health of the running services"
    },
    {
      "name": "Activity",
      "description": "Retrieve activity for the profiles and tokens in your game"
    },
    {
      "name": "Contract",
      "description": "Interact with your Contracts"
    }
  ],
  "servers": [],
  "components": {
    "securitySchemes": {
      "beam-api-key": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key"
      }
    },
    "schemas": {
      "AutomationBeamErrorResponse": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "integer",
            "minimum": 400,
            "maximum": 599
          },
          "error": {
            "type": "string"
          },
          "validation": {
            "type": "array",
            "items": {}
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        },
        "required": [
          "path",
          "timestamp",
          "status"
        ]
      },
      "AutomationGetAssetsForProfileBodyInputV2": {
        "type": "object",
        "properties": {
          "sortDirection": {
            "default": "asc",
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "sortBy": {
            "default": "acquiredAt",
            "type": "string",
            "enum": [
              "acquiredAt",
              "lastAppraisalValue"
            ]
          },
          "contract": {
            "default": null,
            "type": "string",
            "nullable": true
          },
          "includeAttributes": {
            "default": false,
            "type": "boolean",
            "nullable": true
          },
          "continuation": {
            "default": null,
            "type": "string",
            "nullable": true
          },
          "chainId": {
            "default": 13337,
            "type": "integer",
            "format": "int64"
          },
          "limit": {
            "default": 20,
            "type": "number",
            "minimum": 1,
            "maximum": 100
          }
        }
      },
      "AutomationGetAssetsForProfileResponseV2": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "imageUrl": {
                  "type": "string"
                },
                "assetType": {
                  "type": "string"
                },
                "assetAddress": {
                  "type": "string"
                },
                "assetId": {
                  "type": "string"
                },
                "supply": {
                  "type": "number"
                },
                "rarity": {
                  "type": "string",
                  "enum": [
                    "Common",
                    "Uncommon",
                    "Rare",
                    "VeryRare",
                    "ExtremelyRare"
                  ],
                  "nullable": true
                },
                "rarityScore": {
                  "type": "number",
                  "nullable": true
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                },
                "mintedAt": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                },
                "attributes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "displayType": {
                        "type": "string",
                        "nullable": true
                      },
                      "maxValue": {
                        "type": "number",
                        "nullable": true
                      },
                      "rarity": {
                        "type": "number",
                        "nullable": true
                      },
                      "type": {
                        "type": "string",
                        "nullable": true
                      },
                      "value": {
                        "type": "string",
                        "nullable": true
                      }
                    }
                  },
                  "nullable": true
                },
                "chainId": {
                  "default": 13337,
                  "type": "integer",
                  "format": "int64"
                },
                "ownedQuantity": {
                  "type": "number"
                }
              },
              "required": [
                "name",
                "imageUrl",
                "assetType",
                "assetAddress",
                "assetId",
                "supply",
                "ownedQuantity"
              ]
            }
          },
          "continuation": {
            "default": null,
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "data"
        ]
      },
      "AutomationGetProfileCurrenciesResponseV2": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "address": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "symbol": {
                  "type": "string"
                },
                "decimals": {
                  "type": "number"
                },
                "logoUri": {
                  "type": "string"
                },
                "chainId": {
                  "type": "integer",
                  "format": "int64"
                },
                "balance": {
                  "type": "string"
                }
              },
              "required": [
                "address",
                "name",
                "symbol",
                "decimals",
                "chainId",
                "balance"
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "AutomationGetProfileNativeCurrencyResponseV2": {
        "type": "object",
        "properties": {
          "nativeTokenBalance": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "symbol": {
                "type": "string"
              },
              "decimals": {
                "type": "number"
              },
              "logoUri": {
                "type": "string"
              },
              "chainId": {
                "type": "integer",
                "format": "int64"
              },
              "balance": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "symbol",
              "decimals",
              "chainId",
              "balance"
            ]
          }
        },
        "required": [
          "nativeTokenBalance"
        ]
      },
      "AutomationTransferAssetRequestInputV2": {
        "type": "object",
        "properties": {
          "assets": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "receiverEntityId": {
                  "type": "string"
                },
                "receiverWalletAddress": {
                  "type": "string"
                },
                "assetAddress": {
                  "type": "string"
                },
                "assetId": {
                  "type": "string",
                  "pattern": "^\\d+$"
                },
                "amountToTransfer": {
                  "default": 1,
                  "type": "number",
                  "multipleOf": 1,
                  "minimum": 1
                }
              },
              "required": [
                "assetAddress",
                "assetId"
              ]
            },
            "minItems": 1,
            "maxItems": 9
          },
          "optimistic": {
            "default": false,
            "type": "boolean"
          },
          "sponsor": {
            "default": true,
            "type": "boolean"
          },
          "policyId": {
            "default": null,
            "type": "string",
            "format": "cuid",
            "nullable": true
          },
          "chainId": {
            "default": 13337,
            "type": "integer",
            "format": "int64"
          }
        },
        "required": [
          "assets"
        ]
      },
      "AutomationTransactionResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "chainId": {
            "type": "integer",
            "format": "int64"
          },
          "intent": {
            "type": "object",
            "properties": {
              "interactions": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "to": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "contract": {
                      "type": "string"
                    },
                    "functionName": {
                      "type": "string"
                    },
                    "functionArgs": {
                      "type": "array",
                      "items": {}
                    }
                  }
                },
                "nullable": true
              },
              "hash": {
                "type": "string",
                "nullable": true
              }
            }
          },
          "transaction": {
            "type": "object",
            "properties": {
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "blockNumber": {
                "type": "number"
              },
              "hash": {
                "type": "string"
              },
              "gasUsed": {
                "type": "string"
              },
              "gasFee": {
                "type": "string"
              },
              "status": {
                "type": "number"
              },
              "logs": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "blockNumber": {
                      "type": "number"
                    },
                    "blockHash": {
                      "type": "string"
                    },
                    "transactionIndex": {
                      "type": "number"
                    },
                    "removed": {
                      "type": "boolean"
                    },
                    "address": {
                      "type": "string"
                    },
                    "data": {
                      "type": "string"
                    },
                    "topics": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "transactionHash": {
                      "type": "string"
                    },
                    "logIndex": {
                      "type": "number"
                    },
                    "orphaned": {
                      "type": "boolean",
                      "nullable": true
                    }
                  },
                  "required": [
                    "blockNumber",
                    "blockHash",
                    "transactionIndex",
                    "removed",
                    "address",
                    "data",
                    "topics",
                    "transactionHash",
                    "logIndex"
                  ]
                }
              }
            },
            "required": [
              "createdAt"
            ],
            "nullable": true,
            "description": "The transaction object exists if you created the transaction deterministically and contains information about the on-chain transaction"
          },
          "policy": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "nullable": true
              }
            },
            "description": "Policy information related to the transaction"
          },
          "profile": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "nullable": true
              },
              "wallet": {
                "type": "object",
                "properties": {
                  "address": {
                    "type": "string"
                  }
                },
                "required": [
                  "address"
                ]
              }
            },
            "required": [
              "wallet"
            ],
            "description": "Profile and wallet information related to the transaction"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "success"
            ]
          },
          "type": {
            "type": "string",
            "enum": [
              "custodial",
              "self-custodial"
            ]
          },
          "transactionHash": {
            "type": "string"
          },
          "explorerUrl": {
            "type": "string"
          },
          "success": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "chainId",
          "intent",
          "policy",
          "profile",
          "status",
          "type",
          "explorerUrl",
          "success"
        ]
      },
      "AutomationTransferTokenRequestInputV2": {
        "type": "object",
        "properties": {
          "receiverEntityId": {
            "type": "string"
          },
          "receiverWalletAddress": {
            "type": "string"
          },
          "assetAddress": {
            "type": "string"
          },
          "amountToTransfer": {
            "type": "string"
          },
          "optimistic": {
            "default": false,
            "type": "boolean"
          },
          "sponsor": {
            "default": true,
            "type": "boolean"
          },
          "policyId": {
            "default": null,
            "type": "string",
            "format": "cuid",
            "nullable": true
          },
          "chainId": {
            "default": 13337,
            "type": "integer",
            "format": "int64"
          }
        },
        "required": [
          "assetAddress",
          "amountToTransfer"
        ]
      },
      "AutomationTransferNativeTokenRequestInputV2": {
        "type": "object",
        "properties": {
          "receiverEntityId": {
            "type": "string"
          },
          "receiverWalletAddress": {
            "type": "string"
          },
          "amountToTransfer": {
            "type": "string"
          },
          "optimistic": {
            "default": false,
            "type": "boolean"
          },
          "sponsor": {
            "default": true,
            "type": "boolean"
          },
          "policyId": {
            "default": null,
            "type": "string",
            "format": "cuid",
            "nullable": true
          },
          "chainId": {
            "default": 13337,
            "type": "integer",
            "format": "int64"
          }
        },
        "required": [
          "amountToTransfer"
        ]
      },
      "AutomationGetAssetsForContractBodyInputV2": {
        "type": "object",
        "properties": {
          "continuation": {
            "default": null,
            "type": "string",
            "nullable": true
          },
          "chainId": {
            "default": 13337,
            "type": "integer",
            "format": "int64"
          },
          "minRarityRank": {
            "default": null,
            "type": "integer",
            "nullable": true
          },
          "maxRarityRank": {
            "default": null,
            "type": "integer",
            "nullable": true
          },
          "minFloorAskPrice": {
            "default": null,
            "type": "number",
            "nullable": true
          },
          "maxFloorAskPrice": {
            "default": null,
            "type": "number",
            "nullable": true
          },
          "includeAttributes": {
            "default": false,
            "type": "boolean",
            "nullable": true
          },
          "attributes": {
            "default": null,
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "key": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              },
              "required": [
                "key",
                "value"
              ]
            },
            "nullable": true
          },
          "sortDirection": {
            "default": "asc",
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "sortBy": {
            "default": "floorAskPrice",
            "type": "string",
            "enum": [
              "floorAskPrice",
              "tokenId",
              "rarity",
              "updatedAt",
              "mintedAt"
            ]
          },
          "limit": {
            "default": 20,
            "type": "number",
            "minimum": 1,
            "maximum": 100
          }
        }
      },
      "AutomationGetAssetsForContractResponseV2": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "imageUrl": {
                  "type": "string"
                },
                "assetType": {
                  "type": "string"
                },
                "assetAddress": {
                  "type": "string"
                },
                "assetId": {
                  "type": "string"
                },
                "supply": {
                  "type": "number"
                },
                "rarity": {
                  "type": "string",
                  "enum": [
                    "Common",
                    "Uncommon",
                    "Rare",
                    "VeryRare",
                    "ExtremelyRare"
                  ],
                  "nullable": true
                },
                "rarityScore": {
                  "type": "number",
                  "nullable": true
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                },
                "mintedAt": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                },
                "attributes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "displayType": {
                        "type": "string",
                        "nullable": true
                      },
                      "maxValue": {
                        "type": "number",
                        "nullable": true
                      },
                      "rarity": {
                        "type": "number",
                        "nullable": true
                      },
                      "type": {
                        "type": "string",
                        "nullable": true
                      },
                      "value": {
                        "type": "string",
                        "nullable": true
                      }
                    }
                  },
                  "nullable": true
                },
                "chainId": {
                  "default": 13337,
                  "type": "integer",
                  "format": "int64"
                }
              },
              "required": [
                "name",
                "imageUrl",
                "assetType",
                "assetAddress",
                "assetId",
                "supply"
              ]
            }
          },
          "continuation": {
            "default": null,
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "data"
        ]
      },
      "AutomationGetAssetResponseV2": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "assetType": {
            "type": "string"
          },
          "assetAddress": {
            "type": "string"
          },
          "assetId": {
            "type": "string"
          },
          "supply": {
            "type": "number"
          },
          "owners": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "address": {
                  "type": "string"
                },
                "quantity": {
                  "type": "number"
                },
                "entityId": {
                  "type": "string"
                }
              },
              "required": [
                "address",
                "quantity"
              ]
            },
            "nullable": true
          },
          "rarity": {
            "type": "string",
            "enum": [
              "Common",
              "Uncommon",
              "Rare",
              "VeryRare",
              "ExtremelyRare"
            ],
            "nullable": true
          },
          "rarityScore": {
            "type": "number",
            "nullable": true
          },
          "attributes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "displayType": {
                  "type": "string",
                  "nullable": true
                },
                "maxValue": {
                  "type": "number",
                  "nullable": true
                },
                "rarity": {
                  "type": "number",
                  "nullable": true
                },
                "type": {
                  "type": "string",
                  "nullable": true
                },
                "value": {
                  "type": "string",
                  "nullable": true
                }
              }
            },
            "nullable": true
          },
          "chainId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "required": [
          "name",
          "imageUrl",
          "assetType",
          "assetAddress",
          "assetId",
          "supply",
          "owners",
          "chainId"
        ]
      },
      "AutomationGetChainResponse": {
        "type": "object",
        "properties": {
          "chainId": {
            "type": "integer",
            "format": "int64"
          },
          "blockNumber": {
            "type": "number"
          },
          "nativeCurrency": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "symbol": {
                "type": "string"
              },
              "decimals": {
                "type": "number"
              }
            },
            "required": [
              "name",
              "symbol",
              "decimals"
            ]
          }
        },
        "required": [
          "chainId",
          "blockNumber",
          "nativeCurrency"
        ]
      },
      "AutomationCreateTransactionRequestInputV2": {
        "type": "object",
        "properties": {
          "interactions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "contractAddress": {
                  "type": "string"
                },
                "functionName": {
                  "type": "string"
                },
                "functionArgs": {
                  "default": [],
                  "type": "array",
                  "items": {}
                },
                "value": {
                  "type": "string",
                  "nullable": true,
                  "description": "The value intended to be sent with the transaction. Optional."
                }
              },
              "required": [
                "contractAddress",
                "functionName"
              ]
            },
            "minItems": 1,
            "maxItems": 9
          },
          "optimistic": {
            "default": false,
            "type": "boolean"
          },
          "sponsor": {
            "default": true,
            "type": "boolean"
          },
          "policyId": {
            "default": null,
            "type": "string",
            "format": "cuid",
            "nullable": true
          },
          "chainId": {
            "default": 13337,
            "type": "integer",
            "format": "int64"
          }
        },
        "required": [
          "interactions"
        ]
      },
      "AutomationGetEstimateResponse": {
        "type": "object",
        "properties": {
          "estimatedGas": {
            "type": "string"
          }
        },
        "required": [
          "estimatedGas"
        ]
      },
      "AutomationGetVerificationStatusRequestInput": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          },
          "chainId": {
            "type": "integer"
          }
        },
        "required": [
          "address",
          "chainId"
        ]
      },
      "AutomationGetVerificationStatusResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "verified",
              "unverified"
            ]
          }
        },
        "required": [
          "status"
        ]
      },
      "AutomationGameContractsResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "ERC20",
              "ERC721",
              "ERC1155",
              "CUSTOM",
              "SEAPORT",
              "UNISWAPV2"
            ]
          },
          "address": {
            "type": "string"
          },
          "chainId": {
            "type": "integer"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "abi": {
            "nullable": true
          },
          "hasCustomAbi": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "type",
          "address",
          "chainId",
          "name",
          "hasCustomAbi",
          "createdAt",
          "updatedAt"
        ]
      },
      "AutomationAddContractRequestInput": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          },
          "chainId": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "abi": {
            "nullable": true,
            "description": "The ABI of the contract. If not provided, one will be taken from Block Explorer Verification Source."
          }
        },
        "required": [
          "address",
          "chainId",
          "name"
        ]
      },
      "AutomationAddContractResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "ERC20",
              "ERC721",
              "ERC1155",
              "CUSTOM",
              "SEAPORT",
              "UNISWAPV2"
            ]
          },
          "id": {
            "type": "string",
            "format": "cuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "externalId": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "chainId": {
            "type": "integer"
          },
          "gameId": {
            "type": "string",
            "nullable": true
          },
          "abi": {
            "nullable": true
          },
          "hasCustomAbi": {
            "type": "boolean"
          }
        },
        "required": [
          "type",
          "id",
          "createdAt",
          "updatedAt",
          "externalId",
          "address",
          "name",
          "chainId",
          "gameId",
          "abi",
          "hasCustomAbi"
        ]
      },
      "AutomationRemoveContractResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          }
        },
        "required": [
          "success"
        ]
      },
      "AutomationGetQuoteResponse": {
        "type": "object",
        "properties": {
          "tokenIn": {
            "type": "string"
          },
          "tokenOut": {
            "type": "string"
          },
          "amountIn": {
            "type": "string"
          },
          "amountOut": {
            "type": "string"
          }
        },
        "required": [
          "tokenIn",
          "tokenOut",
          "amountIn",
          "amountOut"
        ]
      },
      "AutomationConvertTokenRequestInput": {
        "type": "object",
        "properties": {
          "tokenIn": {
            "type": "string"
          },
          "tokenOut": {
            "type": "string"
          },
          "amountIn": {
            "type": "string"
          },
          "amountOut": {
            "type": "string"
          },
          "receiverEntityId": {
            "type": "string"
          },
          "receiverWalletAddress": {
            "type": "string"
          },
          "optimistic": {
            "default": false,
            "type": "boolean"
          },
          "sponsor": {
            "default": true,
            "type": "boolean"
          },
          "policyId": {
            "default": null,
            "type": "string",
            "format": "cuid",
            "nullable": true
          },
          "chainId": {
            "default": 13337,
            "type": "integer",
            "format": "int64"
          }
        },
        "required": [
          "tokenIn",
          "tokenOut",
          "amountIn",
          "amountOut"
        ]
      },
      "AutomationWrappingTokenInput": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "string"
          },
          "optimistic": {
            "default": false,
            "type": "boolean"
          },
          "sponsor": {
            "default": true,
            "type": "boolean"
          },
          "policyId": {
            "default": null,
            "type": "string",
            "format": "cuid",
            "nullable": true
          },
          "chainId": {
            "default": 13337,
            "type": "integer",
            "format": "int64"
          }
        },
        "required": [
          "amount"
        ]
      },
      "AutomationUnwrappingTokenInput": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "string"
          },
          "optimistic": {
            "default": false,
            "type": "boolean"
          },
          "sponsor": {
            "default": true,
            "type": "boolean"
          },
          "policyId": {
            "default": null,
            "type": "string",
            "format": "cuid",
            "nullable": true
          },
          "chainId": {
            "default": 13337,
            "type": "integer",
            "format": "int64"
          }
        },
        "required": [
          "amount"
        ]
      },
      "AutomationGetGameResponse": {
        "type": "object",
        "properties": {
          "pegiRating": {
            "type": "string",
            "enum": [
              "Three",
              "Seven",
              "Twelve",
              "Sixteen",
              "Eighteen"
            ],
            "nullable": true
          },
          "pegiContent": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "BadLanguage",
                "Discrimination",
                "Drugs",
                "Fear",
                "Gambling",
                "Sex",
                "Violence",
                "InGamePurchases"
              ]
            }
          },
          "id": {
            "type": "string",
            "format": "cuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "coverImageUrl": {
            "type": "string",
            "nullable": true
          },
          "logoImageUrl": {
            "type": "string",
            "nullable": true
          },
          "backgroundImageUrl": {
            "type": "string",
            "nullable": true
          },
          "androidCallbackDeepLink": {
            "type": "string",
            "nullable": true
          },
          "connectionsWebhookUrl": {
            "type": "string",
            "nullable": true
          },
          "chainIds": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "depositor": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "cuid"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "externalId": {
                "type": "string"
              },
              "address": {
                "type": "string"
              },
              "gameId": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "createdAt",
              "updatedAt",
              "externalId",
              "address",
              "gameId"
            ],
            "nullable": true
          },
          "developers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "role": {
                  "type": "string",
                  "enum": [
                    "Owner",
                    "Admin",
                    "Viewer"
                  ],
                  "nullable": true
                },
                "id": {
                  "type": "string",
                  "format": "cuid"
                },
                "developerId": {
                  "type": "string"
                },
                "gameId": {
                  "type": "string"
                },
                "developer": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "cuid"
                    },
                    "name": {
                      "type": "string",
                      "nullable": true
                    },
                    "email": {
                      "type": "string"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "lastSeenAt": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "supabaseId": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "email",
                    "createdAt",
                    "lastSeenAt",
                    "supabaseId"
                  ]
                }
              },
              "required": [
                "role",
                "id",
                "developerId",
                "gameId",
                "developer"
              ]
            }
          },
          "contracts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "ERC20",
                    "ERC721",
                    "ERC1155",
                    "CUSTOM",
                    "SEAPORT",
                    "UNISWAPV2"
                  ]
                },
                "id": {
                  "type": "string",
                  "format": "cuid"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "externalId": {
                  "type": "string"
                },
                "address": {
                  "type": "string"
                },
                "name": {
                  "type": "string",
                  "nullable": true
                },
                "chainId": {
                  "type": "integer"
                },
                "gameId": {
                  "type": "string",
                  "nullable": true
                },
                "abi": {
                  "nullable": true
                },
                "hasCustomAbi": {
                  "type": "boolean"
                }
              },
              "required": [
                "type",
                "id",
                "createdAt",
                "updatedAt",
                "externalId",
                "address",
                "name",
                "chainId",
                "gameId",
                "abi",
                "hasCustomAbi"
              ]
            }
          },
          "policies": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "model": {
                  "type": "string",
                  "enum": [
                    "ContractFunctions",
                    "AccountFunctions"
                  ]
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "PayForUser",
                    "ChargeCustomToken"
                  ]
                },
                "rateType": {
                  "type": "string",
                  "enum": [
                    "Fixed",
                    "Dynamic"
                  ],
                  "nullable": true
                },
                "id": {
                  "type": "string",
                  "format": "cuid"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "externalId": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "chainId": {
                  "type": "integer"
                },
                "paymasterId": {
                  "type": "string",
                  "nullable": true
                },
                "gameId": {
                  "type": "string"
                },
                "token": {
                  "type": "string",
                  "nullable": true
                },
                "amount": {
                  "type": "string",
                  "nullable": true
                },
                "depositorId": {
                  "type": "string",
                  "nullable": true
                }
              },
              "required": [
                "model",
                "type",
                "id",
                "createdAt",
                "updatedAt",
                "externalId",
                "name",
                "chainId",
                "paymasterId",
                "gameId",
                "token",
                "amount",
                "depositorId"
              ]
            }
          }
        },
        "required": [
          "pegiRating",
          "pegiContent",
          "id",
          "createdAt",
          "updatedAt",
          "name",
          "description",
          "coverImageUrl",
          "logoImageUrl",
          "backgroundImageUrl",
          "androidCallbackDeepLink",
          "connectionsWebhookUrl",
          "chainIds",
          "developers",
          "contracts",
          "policies"
        ]
      },
      "AutomationRegenerateGameApiKeysResponse": {
        "type": "object",
        "properties": {
          "pegiRating": {
            "type": "string",
            "enum": [
              "Three",
              "Seven",
              "Twelve",
              "Sixteen",
              "Eighteen"
            ],
            "nullable": true
          },
          "pegiContent": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "BadLanguage",
                "Discrimination",
                "Drugs",
                "Fear",
                "Gambling",
                "Sex",
                "Violence",
                "InGamePurchases"
              ]
            }
          },
          "id": {
            "type": "string",
            "format": "cuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "coverImageUrl": {
            "type": "string",
            "nullable": true
          },
          "logoImageUrl": {
            "type": "string",
            "nullable": true
          },
          "backgroundImageUrl": {
            "type": "string",
            "nullable": true
          },
          "androidCallbackDeepLink": {
            "type": "string",
            "nullable": true
          },
          "connectionsWebhookUrl": {
            "type": "string",
            "nullable": true
          },
          "chainIds": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "apiKeys": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "Regenerate",
                    "Publishable",
                    "Secret"
                  ]
                },
                "id": {
                  "type": "string",
                  "format": "cuid"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "apiKey": {
                  "type": "string"
                },
                "gameId": {
                  "type": "string"
                }
              },
              "required": [
                "type",
                "id",
                "createdAt",
                "updatedAt",
                "apiKey",
                "gameId"
              ]
            }
          }
        },
        "required": [
          "pegiRating",
          "pegiContent",
          "id",
          "createdAt",
          "updatedAt",
          "name",
          "description",
          "coverImageUrl",
          "logoImageUrl",
          "backgroundImageUrl",
          "androidCallbackDeepLink",
          "connectionsWebhookUrl",
          "chainIds",
          "apiKeys"
        ]
      },
      "AutomationGetListedAssetsBodyInputV2": {
        "type": "object",
        "properties": {
          "assetAddresses": {
            "default": null,
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "sortBy": {
            "default": "createdAt",
            "type": "string",
            "enum": [
              "createdAt",
              "updatedAt",
              "price"
            ]
          },
          "sortDirection": {
            "default": "desc",
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ],
            "description": "If using `createdAt` for sorting, only `desc` is allowed."
          },
          "limit": {
            "default": 50,
            "type": "integer",
            "minimum": 1,
            "maximum": 1000
          },
          "chainId": {
            "default": 13337,
            "type": "integer",
            "format": "int64"
          },
          "continuation": {
            "default": null,
            "type": "string",
            "nullable": true
          }
        }
      },
      "AutomationGetAssetListingsResponseV2": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "side": {
                  "type": "string"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "active",
                    "inactive",
                    "expired",
                    "canceled",
                    "filled"
                  ],
                  "nullable": true
                },
                "assetAddress": {
                  "type": "string"
                },
                "assetId": {
                  "type": "string"
                },
                "contractKind": {
                  "type": "string"
                },
                "maker": {
                  "type": "string"
                },
                "price": {
                  "type": "object",
                  "properties": {
                    "currency": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "type": "string"
                        },
                        "symbol": {
                          "type": "string",
                          "enum": [
                            "BEAM",
                            "SOPH",
                            "WBEAM",
                            "WSOPH",
                            "RAT",
                            "USDC"
                          ],
                          "nullable": true
                        },
                        "decimals": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "address",
                        "decimals"
                      ],
                      "nullable": true
                    },
                    "amount": {
                      "type": "object",
                      "properties": {
                        "raw": {
                          "type": "string"
                        },
                        "decimal": {
                          "type": "number"
                        },
                        "usd": {
                          "type": "number"
                        },
                        "native": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "raw",
                        "decimal",
                        "usd",
                        "native"
                      ],
                      "nullable": true
                    },
                    "netAmount": {
                      "type": "object",
                      "properties": {
                        "raw": {
                          "type": "string"
                        },
                        "decimal": {
                          "type": "number"
                        },
                        "usd": {
                          "type": "number"
                        },
                        "native": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "raw",
                        "decimal",
                        "usd",
                        "native"
                      ],
                      "nullable": true
                    }
                  },
                  "nullable": true
                },
                "validFrom": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                },
                "validUntil": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                },
                "quantityFilled": {
                  "type": "number"
                },
                "quantityRemaining": {
                  "type": "number"
                },
                "expiresAt": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                }
              },
              "required": [
                "id",
                "side",
                "assetAddress",
                "assetId",
                "contractKind",
                "maker"
              ]
            }
          },
          "continuation": {
            "default": null,
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "data"
        ]
      },
      "AutomationSellAssetRequestInputV2": {
        "type": "object",
        "properties": {
          "assetAddress": {
            "type": "string"
          },
          "assetId": {
            "type": "string",
            "pattern": "^\\d+$"
          },
          "quantity": {
            "type": "number"
          },
          "price": {
            "type": "string"
          },
          "startTime": {
            "type": "string",
            "nullable": true,
            "description": "Date time string with YYYY-MM-DDTHH:mm:ss.sssZ format or Unix timestamp in milliseconds"
          },
          "endTime": {
            "type": "string",
            "nullable": true,
            "description": "Date time string with YYYY-MM-DDTHH:mm:ss.sssZ format or Unix timestamp in milliseconds"
          },
          "sellType": {
            "type": "string",
            "enum": [
              "FixedPrice",
              "DescendingAuction",
              "AscendingAuction",
              "NotForSale"
            ]
          },
          "currency": {
            "default": "BEAM",
            "type": "string",
            "enum": [
              "BEAM",
              "SOPH",
              "WBEAM",
              "WSOPH",
              "RAT",
              "USDC"
            ]
          },
          "sponsor": {
            "default": true,
            "type": "boolean"
          },
          "policyId": {
            "default": null,
            "type": "string",
            "format": "cuid",
            "nullable": true
          },
          "chainId": {
            "default": 13337,
            "type": "integer",
            "format": "int64"
          }
        },
        "required": [
          "assetAddress",
          "assetId",
          "quantity",
          "price",
          "sellType"
        ]
      },
      "AutomationSellAssetResponseV2": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string"
          }
        },
        "required": [
          "orderId"
        ]
      },
      "AutomationBuyAssetRequestInputV2": {
        "type": "object",
        "properties": {
          "quantity": {
            "type": "number"
          },
          "optimistic": {
            "default": false,
            "type": "boolean"
          },
          "sponsor": {
            "default": true,
            "type": "boolean"
          },
          "policyId": {
            "default": null,
            "type": "string",
            "format": "cuid",
            "nullable": true
          },
          "chainId": {
            "default": 13337,
            "type": "integer",
            "format": "int64"
          }
        },
        "required": [
          "quantity"
        ]
      },
      "AutomationCancelAssetListingRequestInputV2": {
        "type": "object",
        "properties": {
          "optimistic": {
            "default": false,
            "type": "boolean"
          },
          "sponsor": {
            "default": true,
            "type": "boolean"
          },
          "policyId": {
            "default": null,
            "type": "string",
            "format": "cuid",
            "nullable": true
          }
        }
      },
      "AutomationCreateAssetOfferRequestInputV2": {
        "type": "object",
        "properties": {
          "assetAddress": {
            "type": "string"
          },
          "assetId": {
            "type": "string",
            "pattern": "^\\d+$"
          },
          "quantity": {
            "type": "number",
            "minimum": 1
          },
          "price": {
            "type": "string"
          },
          "startTime": {
            "type": "string"
          },
          "endTime": {
            "type": "string"
          },
          "currency": {
            "default": "WBEAM",
            "type": "string",
            "enum": [
              "WBEAM",
              "WSOPH",
              "RAT",
              "USDC"
            ]
          },
          "chainId": {
            "default": 13337,
            "type": "integer",
            "format": "int64"
          }
        },
        "required": [
          "assetAddress",
          "assetId",
          "quantity",
          "price"
        ]
      },
      "AutomationCreateOfferResponseV2": {
        "type": "object",
        "properties": {
          "offerId": {
            "type": "string"
          }
        },
        "required": [
          "offerId"
        ]
      },
      "AutomationAcceptAssetOfferRequestInputV2": {
        "type": "object",
        "properties": {
          "quantity": {
            "type": "number",
            "minimum": 1
          },
          "optimistic": {
            "default": false,
            "type": "boolean"
          },
          "offerId": {
            "type": "string"
          },
          "sponsor": {
            "default": true,
            "type": "boolean"
          },
          "policyId": {
            "default": null,
            "type": "string",
            "format": "cuid",
            "nullable": true
          },
          "chainId": {
            "default": 13337,
            "type": "integer",
            "format": "int64"
          }
        },
        "required": [
          "quantity",
          "offerId"
        ]
      },
      "AutomationCancelAssetOfferRequestInputV2": {
        "type": "object",
        "properties": {
          "optimistic": {
            "default": false,
            "type": "boolean"
          },
          "offerId": {
            "type": "string"
          },
          "sponsor": {
            "default": true,
            "type": "boolean"
          },
          "policyId": {
            "default": null,
            "type": "string",
            "format": "cuid",
            "nullable": true
          },
          "chainId": {
            "default": 13337,
            "type": "integer",
            "format": "int64"
          }
        },
        "required": [
          "offerId"
        ]
      },
      "AutomationGetChainCurrenciesResponseV2": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "decimals": {
                  "type": "number"
                },
                "symbol": {
                  "type": "string",
                  "enum": [
                    "BEAM",
                    "SOPH",
                    "WBEAM",
                    "WSOPH",
                    "RAT",
                    "USDC"
                  ]
                },
                "address": {
                  "type": "string"
                }
              },
              "required": [
                "decimals",
                "symbol",
                "address"
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "AutomationRefreshTokenRequestBody": {
        "type": "object",
        "properties": {
          "assetAddress": {
            "type": "string"
          },
          "tokenId": {
            "type": "string",
            "pattern": "^\\d+$"
          },
          "chainId": {
            "default": 13337,
            "type": "integer",
            "format": "int64"
          }
        },
        "required": [
          "assetAddress",
          "tokenId"
        ]
      },
      "AutomationRefreshContractRequestBody": {
        "type": "object",
        "properties": {
          "assetAddress": {
            "type": "string"
          },
          "chainId": {
            "default": 13337,
            "type": "integer",
            "format": "int64"
          }
        },
        "required": [
          "assetAddress"
        ]
      },
      "AutomationCommonAddPolicyRequestInput": {
        "type": "object",
        "properties": {
          "tokenAddress": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "minimum": 1
          },
          "rateType": {
            "type": "string",
            "enum": [
              "Fixed",
              "Dynamic"
            ]
          },
          "chainId": {
            "default": 13337,
            "type": "integer",
            "format": "int64"
          }
        },
        "required": [
          "tokenAddress",
          "amount",
          "rateType"
        ]
      },
      "AutomationCommonAddPolicyResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "cuid"
          },
          "chainId": {
            "type": "integer"
          },
          "token": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "string",
            "nullable": true
          },
          "rateType": {
            "type": "string",
            "enum": [
              "Fixed",
              "Dynamic"
            ],
            "nullable": true
          },
          "depositorId": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "id",
          "chainId",
          "token",
          "amount",
          "rateType",
          "depositorId"
        ]
      },
      "AutomationCommonRemovePolicyResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          }
        },
        "required": [
          "success"
        ]
      },
      "AutomationCommonGetPoliciesResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "cuid"
                },
                "rateType": {
                  "type": "string",
                  "enum": [
                    "Fixed",
                    "Dynamic"
                  ],
                  "nullable": true
                },
                "amount": {
                  "type": "string",
                  "nullable": true
                },
                "token": {
                  "type": "string",
                  "nullable": true
                },
                "depositorId": {
                  "type": "string",
                  "nullable": true
                }
              },
              "required": [
                "id",
                "rateType",
                "amount",
                "token",
                "depositorId"
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "AutomationCreateProfileRequestInput": {
        "type": "object",
        "properties": {
          "entityId": {
            "type": "string",
            "minLength": 3,
            "maxLength": 250
          },
          "chainId": {
            "default": 13337,
            "type": "integer",
            "format": "int64"
          }
        },
        "required": [
          "entityId"
        ]
      },
      "AutomationCreateProfileResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "cuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "externalId": {
            "type": "string"
          },
          "externalEntityId": {
            "type": "string"
          },
          "gameId": {
            "type": "string"
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "userConnectionCreatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "wallets": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "cuid"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "externalId": {
                  "type": "string"
                },
                "address": {
                  "type": "string"
                },
                "chainId": {
                  "type": "integer"
                },
                "profileId": {
                  "type": "string",
                  "nullable": true
                },
                "userId": {
                  "type": "string",
                  "nullable": true
                }
              },
              "required": [
                "id",
                "createdAt",
                "updatedAt",
                "externalId",
                "address",
                "chainId",
                "profileId",
                "userId"
              ]
            }
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "externalId",
          "externalEntityId",
          "gameId",
          "userId",
          "wallets"
        ]
      },
      "AutomationGetAllProfilesResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "cuid"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "externalId": {
                  "type": "string"
                },
                "externalEntityId": {
                  "type": "string"
                },
                "gameId": {
                  "type": "string"
                },
                "userId": {
                  "type": "string",
                  "nullable": true
                },
                "userConnectionCreatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                },
                "wallets": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "cuid"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "externalId": {
                        "type": "string"
                      },
                      "address": {
                        "type": "string"
                      },
                      "chainId": {
                        "type": "integer"
                      },
                      "profileId": {
                        "type": "string",
                        "nullable": true
                      },
                      "userId": {
                        "type": "string",
                        "nullable": true
                      }
                    },
                    "required": [
                      "id",
                      "createdAt",
                      "updatedAt",
                      "externalId",
                      "address",
                      "chainId",
                      "profileId",
                      "userId"
                    ]
                  }
                }
              },
              "required": [
                "id",
                "createdAt",
                "updatedAt",
                "externalId",
                "externalEntityId",
                "gameId",
                "userId",
                "wallets"
              ]
            }
          },
          "pagination": {
            "type": "object",
            "properties": {
              "count": {
                "type": "number"
              },
              "limit": {
                "default": 10,
                "type": "number"
              },
              "offset": {
                "default": 0,
                "type": "number"
              }
            },
            "required": [
              "count"
            ]
          }
        },
        "required": [
          "data",
          "pagination"
        ]
      },
      "AutomationGetProfileResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "cuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "externalId": {
            "type": "string"
          },
          "externalEntityId": {
            "type": "string"
          },
          "gameId": {
            "type": "string"
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "userConnectionCreatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "wallets": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "cuid"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "externalId": {
                  "type": "string"
                },
                "address": {
                  "type": "string"
                },
                "chainId": {
                  "type": "integer"
                },
                "profileId": {
                  "type": "string",
                  "nullable": true
                },
                "userId": {
                  "type": "string",
                  "nullable": true
                }
              },
              "required": [
                "id",
                "createdAt",
                "updatedAt",
                "externalId",
                "address",
                "chainId",
                "profileId",
                "userId"
              ]
            }
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "externalId",
          "externalEntityId",
          "gameId",
          "userId",
          "wallets"
        ]
      },
      "AutomationUpdateProfileRequestInput": {
        "type": "object",
        "properties": {
          "newEntityId": {
            "type": "string",
            "minLength": 3,
            "maxLength": 250
          }
        },
        "required": [
          "newEntityId"
        ]
      },
      "AutomationUpdateProfileResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "cuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "externalId": {
            "type": "string"
          },
          "externalEntityId": {
            "type": "string"
          },
          "gameId": {
            "type": "string"
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "userConnectionCreatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "wallets": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "cuid"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "externalId": {
                  "type": "string"
                },
                "address": {
                  "type": "string"
                },
                "chainId": {
                  "type": "integer"
                },
                "profileId": {
                  "type": "string",
                  "nullable": true
                },
                "userId": {
                  "type": "string",
                  "nullable": true
                }
              },
              "required": [
                "id",
                "createdAt",
                "updatedAt",
                "externalId",
                "address",
                "chainId",
                "profileId",
                "userId"
              ]
            }
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "externalId",
          "externalEntityId",
          "gameId",
          "userId",
          "wallets"
        ]
      },
      "AutomationGenerateLinkCodeRequestInput": {
        "type": "object",
        "properties": {
          "callbackUrl": {
            "type": "string",
            "format": "uri",
            "nullable": true
          }
        }
      },
      "AutomationGenerateLinkCodeResponse": {
        "type": "object",
        "properties": {
          "challenge": {
            "type": "string"
          }
        },
        "required": [
          "challenge"
        ]
      },
      "AutomationGenerateSignInCodeRequestInput": {
        "type": "object",
        "properties": {
          "callbackUrl": {
            "type": "string",
            "format": "uri",
            "nullable": true
          }
        }
      },
      "AutomationGenerateSignInCodeResponse": {
        "type": "object",
        "properties": {
          "challenge": {
            "type": "string"
          }
        },
        "required": [
          "challenge"
        ]
      },
      "AutomationGetAllGasUsageResponse": {
        "type": "object",
        "properties": {
          "chains": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "policies": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "totalTransactionFeeInUSD": {
                        "type": "string"
                      },
                      "totalTransactionFee": {
                        "type": "string"
                      },
                      "averageTransactionFee": {
                        "type": "string"
                      },
                      "transactionCount": {
                        "type": "number"
                      },
                      "chainId": {
                        "default": 13337,
                        "type": "integer",
                        "format": "int64"
                      },
                      "policy": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "cuid"
                          },
                          "name": {
                            "type": "string"
                          },
                          "model": {
                            "type": "string",
                            "enum": [
                              "ContractFunctions",
                              "AccountFunctions"
                            ]
                          },
                          "chainId": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "model",
                          "chainId"
                        ]
                      },
                      "periods": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "totalTransactionFeeInUSD": {
                              "type": "string"
                            },
                            "totalTransactionFee": {
                              "type": "string"
                            },
                            "averageTransactionFee": {
                              "type": "string"
                            },
                            "transactionCount": {
                              "type": "number"
                            },
                            "start": {
                              "type": "number"
                            },
                            "end": {
                              "type": "number"
                            }
                          },
                          "required": [
                            "totalTransactionFeeInUSD",
                            "totalTransactionFee",
                            "averageTransactionFee",
                            "transactionCount",
                            "start",
                            "end"
                          ]
                        }
                      }
                    },
                    "required": [
                      "totalTransactionFeeInUSD",
                      "totalTransactionFee",
                      "averageTransactionFee",
                      "transactionCount",
                      "policy",
                      "periods"
                    ]
                  }
                },
                "summary": {
                  "type": "object",
                  "properties": {
                    "totalTransactionFeeInUSD": {
                      "type": "string"
                    },
                    "totalTransactionFee": {
                      "type": "string"
                    },
                    "averageTransactionFee": {
                      "type": "string"
                    },
                    "transactionCount": {
                      "type": "number"
                    },
                    "chainId": {
                      "default": 13337,
                      "type": "integer",
                      "format": "int64"
                    },
                    "usersCount": {
                      "type": "number"
                    },
                    "profilesCount": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "totalTransactionFeeInUSD",
                    "totalTransactionFee",
                    "averageTransactionFee",
                    "transactionCount",
                    "usersCount",
                    "profilesCount"
                  ]
                }
              },
              "required": [
                "policies",
                "summary"
              ]
            }
          }
        },
        "required": [
          "chains"
        ]
      },
      "AutomationGetGasUsageResponse": {
        "type": "object",
        "properties": {
          "policies": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "totalTransactionFeeInUSD": {
                  "type": "string"
                },
                "totalTransactionFee": {
                  "type": "string"
                },
                "averageTransactionFee": {
                  "type": "string"
                },
                "transactionCount": {
                  "type": "number"
                },
                "chainId": {
                  "default": 13337,
                  "type": "integer",
                  "format": "int64"
                },
                "policy": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "cuid"
                    },
                    "name": {
                      "type": "string"
                    },
                    "model": {
                      "type": "string",
                      "enum": [
                        "ContractFunctions",
                        "AccountFunctions"
                      ]
                    },
                    "chainId": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "model",
                    "chainId"
                  ]
                },
                "periods": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "totalTransactionFeeInUSD": {
                        "type": "string"
                      },
                      "totalTransactionFee": {
                        "type": "string"
                      },
                      "averageTransactionFee": {
                        "type": "string"
                      },
                      "transactionCount": {
                        "type": "number"
                      },
                      "start": {
                        "type": "number"
                      },
                      "end": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "totalTransactionFeeInUSD",
                      "totalTransactionFee",
                      "averageTransactionFee",
                      "transactionCount",
                      "start",
                      "end"
                    ]
                  }
                }
              },
              "required": [
                "totalTransactionFeeInUSD",
                "totalTransactionFee",
                "averageTransactionFee",
                "transactionCount",
                "policy",
                "periods"
              ]
            }
          },
          "summary": {
            "type": "object",
            "properties": {
              "totalTransactionFeeInUSD": {
                "type": "string"
              },
              "totalTransactionFee": {
                "type": "string"
              },
              "averageTransactionFee": {
                "type": "string"
              },
              "transactionCount": {
                "type": "number"
              },
              "chainId": {
                "default": 13337,
                "type": "integer",
                "format": "int64"
              },
              "usersCount": {
                "type": "number"
              },
              "profilesCount": {
                "type": "number"
              }
            },
            "required": [
              "totalTransactionFeeInUSD",
              "totalTransactionFee",
              "averageTransactionFee",
              "transactionCount",
              "usersCount",
              "profilesCount"
            ]
          }
        },
        "required": [
          "policies",
          "summary"
        ]
      },
      "AutomationGetPolicyUsageResponse": {
        "type": "object",
        "properties": {
          "totalTransactionFeeInUSD": {
            "type": "string"
          },
          "totalTransactionFee": {
            "type": "string"
          },
          "averageTransactionFee": {
            "type": "string"
          },
          "transactionCount": {
            "type": "number"
          },
          "chainId": {
            "default": 13337,
            "type": "integer",
            "format": "int64"
          },
          "policy": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "cuid"
              },
              "name": {
                "type": "string"
              },
              "model": {
                "type": "string",
                "enum": [
                  "ContractFunctions",
                  "AccountFunctions"
                ]
              },
              "chainId": {
                "type": "integer"
              }
            },
            "required": [
              "id",
              "name",
              "model",
              "chainId"
            ]
          },
          "periods": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "totalTransactionFeeInUSD": {
                  "type": "string"
                },
                "totalTransactionFee": {
                  "type": "string"
                },
                "averageTransactionFee": {
                  "type": "string"
                },
                "transactionCount": {
                  "type": "number"
                },
                "start": {
                  "type": "number"
                },
                "end": {
                  "type": "number"
                }
              },
              "required": [
                "totalTransactionFeeInUSD",
                "totalTransactionFee",
                "averageTransactionFee",
                "transactionCount",
                "start",
                "end"
              ]
            }
          }
        },
        "required": [
          "totalTransactionFeeInUSD",
          "totalTransactionFee",
          "averageTransactionFee",
          "transactionCount",
          "policy",
          "periods"
        ]
      },
      "AutomationGetTransactionsResponseV2": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "chainId": {
                  "type": "integer",
                  "format": "int64"
                },
                "intent": {
                  "type": "object",
                  "properties": {
                    "interactions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "to": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          },
                          "contract": {
                            "type": "string"
                          },
                          "functionName": {
                            "type": "string"
                          },
                          "functionArgs": {
                            "type": "array",
                            "items": {}
                          }
                        }
                      },
                      "nullable": true
                    },
                    "hash": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                },
                "transaction": {
                  "type": "object",
                  "properties": {
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "blockNumber": {
                      "type": "number"
                    },
                    "hash": {
                      "type": "string"
                    },
                    "gasUsed": {
                      "type": "string"
                    },
                    "gasFee": {
                      "type": "string"
                    },
                    "status": {
                      "type": "number"
                    },
                    "logs": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "blockNumber": {
                            "type": "number"
                          },
                          "blockHash": {
                            "type": "string"
                          },
                          "transactionIndex": {
                            "type": "number"
                          },
                          "removed": {
                            "type": "boolean"
                          },
                          "address": {
                            "type": "string"
                          },
                          "data": {
                            "type": "string"
                          },
                          "topics": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "transactionHash": {
                            "type": "string"
                          },
                          "logIndex": {
                            "type": "number"
                          },
                          "orphaned": {
                            "type": "boolean",
                            "nullable": true
                          }
                        },
                        "required": [
                          "blockNumber",
                          "blockHash",
                          "transactionIndex",
                          "removed",
                          "address",
                          "data",
                          "topics",
                          "transactionHash",
                          "logIndex"
                        ]
                      }
                    }
                  },
                  "required": [
                    "createdAt"
                  ],
                  "nullable": true,
                  "description": "The transaction object exists if you created the transaction deterministically and contains information about the on-chain transaction"
                }
              },
              "required": [
                "id",
                "createdAt",
                "updatedAt",
                "chainId",
                "intent"
              ]
            }
          },
          "pagination": {
            "type": "object",
            "properties": {
              "count": {
                "type": "number"
              },
              "limit": {
                "default": 10,
                "type": "number"
              },
              "offset": {
                "default": 0,
                "type": "number"
              }
            },
            "required": [
              "count"
            ]
          }
        },
        "required": [
          "data",
          "pagination"
        ]
      },
      "AutomationTradeTokensRequestInput": {
        "type": "object",
        "properties": {
          "initiator": {
            "type": "object",
            "properties": {
              "entityId": {
                "type": "string"
              },
              "tokens": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "assetAddress": {
                      "type": "string"
                    },
                    "amount": {
                      "type": "string"
                    },
                    "tokenId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "assetAddress",
                    "amount"
                  ]
                }
              }
            },
            "required": [
              "entityId",
              "tokens"
            ]
          },
          "counterparty": {
            "type": "object",
            "properties": {
              "entityId": {
                "type": "string"
              },
              "tokens": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "assetAddress": {
                      "type": "string"
                    },
                    "amount": {
                      "type": "string"
                    },
                    "tokenId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "assetAddress",
                    "amount"
                  ]
                }
              }
            },
            "required": [
              "entityId",
              "tokens"
            ]
          },
          "sponsor": {
            "default": true,
            "type": "boolean"
          },
          "policyId": {
            "default": null,
            "type": "string",
            "format": "cuid",
            "nullable": true
          },
          "chainId": {
            "default": 13337,
            "type": "integer",
            "format": "int64"
          }
        },
        "required": [
          "initiator",
          "counterparty"
        ]
      },
      "AutomationCommonStatsRequestInput": {
        "type": "object",
        "properties": {
          "attributes": {
            "default": null,
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "key": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              },
              "required": [
                "key",
                "value"
              ]
            },
            "nullable": true
          },
          "chainId": {
            "default": 13337,
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "AutomationCommonStatsResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "object",
            "properties": {
              "tokens": {
                "type": "number"
              },
              "listed": {
                "type": "number"
              }
            },
            "required": [
              "tokens",
              "listed"
            ]
          }
        },
        "required": [
          "count"
        ]
      },
      "AutomationCommonUserActivityRequestInput": {
        "type": "object",
        "properties": {
          "limit": {
            "default": 20,
            "type": "number",
            "minimum": 1,
            "maximum": 20
          },
          "types": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "ask",
                "ask_cancel",
                "bid",
                "bid_cancel",
                "sale",
                "mint",
                "transfer"
              ]
            },
            "nullable": true
          },
          "chainId": {
            "default": 13337,
            "type": "integer",
            "format": "int64"
          },
          "continuation": {
            "default": null,
            "type": "string",
            "nullable": true
          }
        }
      },
      "AutomationCommonActivityResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "createdAt": {
                  "type": "string",
                  "nullable": true
                },
                "contract": {
                  "type": "object",
                  "properties": {
                    "address": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                },
                "transaction": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "number",
                      "nullable": true
                    },
                    "from": {
                      "type": "string",
                      "nullable": true
                    },
                    "to": {
                      "type": "string",
                      "nullable": true
                    },
                    "hash": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                },
                "asset": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                },
                "order": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "nullable": true
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "ask",
                    "ask_cancel",
                    "bid",
                    "bid_cancel",
                    "sale",
                    "mint",
                    "transfer"
                  ],
                  "nullable": true
                }
              },
              "required": [
                "contract",
                "transaction",
                "asset"
              ]
            }
          },
          "continuation": {
            "default": null,
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "data"
        ]
      },
      "AutomationCommonContractActivityRequestInput": {
        "type": "object",
        "properties": {
          "limit": {
            "default": 20,
            "type": "number",
            "minimum": 1,
            "maximum": 50
          },
          "types": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "ask",
                "ask_cancel",
                "bid",
                "bid_cancel",
                "sale",
                "mint",
                "transfer"
              ]
            },
            "nullable": true
          },
          "chainId": {
            "default": 13337,
            "type": "integer",
            "format": "int64"
          },
          "continuation": {
            "default": null,
            "type": "string",
            "nullable": true
          }
        }
      },
      "AutomationCommonAssetActivityRequestInput": {
        "type": "object",
        "properties": {
          "limit": {
            "default": 20,
            "type": "number",
            "minimum": 1,
            "maximum": 20
          },
          "types": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "ask",
                "ask_cancel",
                "bid",
                "bid_cancel",
                "sale",
                "mint",
                "transfer"
              ]
            },
            "nullable": true
          },
          "chainId": {
            "default": 13337,
            "type": "integer",
            "format": "int64"
          },
          "continuation": {
            "default": null,
            "type": "string",
            "nullable": true
          }
        }
      },
      "AutomationMigrateRequestInput": {
        "type": "object",
        "properties": {
          "profileEntityId": {
            "type": "string"
          },
          "userEntityId": {
            "type": "string"
          },
          "chainId": {
            "default": 13337,
            "type": "integer",
            "format": "int64"
          }
        },
        "required": [
          "profileEntityId",
          "userEntityId"
        ]
      },
      "AutomationMigrateResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          }
        },
        "required": [
          "success"
        ]
      },
      "AutomationReadContractRequest": {
        "type": "object",
        "properties": {
          "chainId": {
            "default": 13337,
            "type": "integer",
            "format": "int64"
          },
          "functionName": {
            "type": "string"
          },
          "functionArgs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "functionName",
          "functionArgs"
        ]
      },
      "AutomationReadContractResonse": {
        "type": "object",
        "properties": {
          "result": {
            "nullable": true
          }
        }
      }
    }
  }
}